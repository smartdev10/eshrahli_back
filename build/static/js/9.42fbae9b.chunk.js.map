{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/EyeFilled.js","../node_modules/@ant-design/icons/es/icons/EyeFilled.js","components/message/ShowMessage/index.js","routes/messages/index.js"],"names":["EyeFilled","props","ref","React","AntdIcon","Object","assign","icon","EyeFilledSvg","displayName","memo","onToggleModal","open","message","useState","content","setMessage","useEffect","keys","length","title","IntlMessages","id","toggle","visible","footer","onCancel","className","Messages","state","selectedRowKeys","loading","onShowMessageState","modal","setState","onShowMessage","onSelectChange","console","log","confirm","ids","DeleteMessages","then","a","fetchMessages","success","catch","error","handleVisibleChange","cancel","e","this","rowSelection","onChange","hasSelected","columns","dataIndex","align","key","render","data","onClick","type","span","onVisibleChange","placement","onConfirm","okText","cancelText","size","DeleteOutlined","disabled","style","marginLeft","rowKey","record","bordered","dataSource","messages","Component","connect"],"mappings":"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","file":"static/js/9.42fbae9b.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar EyeFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M396 512a112 112 0 10224 0 112 112 0 10-224 0zm546.2-25.8C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM508 688c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\" } }] }, \"name\": \"eye\", \"theme\": \"filled\" };\nexport default EyeFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeFilledSvg from \"@ant-design/icons-svg/es/asn/EyeFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EyeFilled = function EyeFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EyeFilledSvg\n  }));\n};\n\nEyeFilled.displayName = 'EyeFilled';\nexport default React.forwardRef(EyeFilled);","import React , { useState , useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst ShowMessage = ({ onToggleModal, open, message }) => {\r\n  \r\n    const [content, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(message).length !== 0){\r\n        setMessage(message.message)\r\n      }\r\n    }, [message])\r\n\r\n    return (\r\n      <Modal\r\n        title={<IntlMessages id=\"message.showMessage\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('onShowMessageState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          {content}\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowMessage);\r\n","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row , message , Popconfirm } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {  DeleteOutlined , EyeFilled } from \"@ant-design/icons\";\r\nimport ShowMessage from \"components/message/ShowMessage\";\r\nimport { fetchMessages , DeleteMessages } from \"../../appRedux/actions/Messages\";\r\n\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    message:{},\r\n    onShowMessageState:false,\r\n    visible: false,\r\n  };\r\n\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n \r\n  componentDidMount(){\r\n    this.props.fetchMessages()\r\n  }\r\n\r\n\r\n  onShowMessage = (message) => {\r\n    this.setState({message} , () => {\r\n        this.onToggleModal('onShowMessageState')\r\n    })\r\n  }\r\n\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true });\r\n    this.props.DeleteMessages({ids})\r\n    .then( async ()=>{\r\n      await this.props.fetchMessages()\r\n      message.success('تم حذف الرسالة');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const {loading, selectedRowKeys , message  , visible} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.email\"/>,\r\n      dataIndex: 'email',\r\n      align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onShowMessage(data)}  type=\"primary\" icon={<EyeFilled />} > عرض الرسالة </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n    \r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Messages\"/></h1>}>\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <ShowMessage open={this.state.onShowMessageState} message={message} onToggleModal={this.onToggleModal} />\r\n          <Table rowKey={record => record.id} bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.messages}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    messages: state.messages,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchMessages , DeleteMessages })(Messages)\r\n\r\n\r\n"],"sourceRoot":""}