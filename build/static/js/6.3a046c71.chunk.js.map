{"version":3,"sources":["routes/settings/Cities/index.js","routes/settings/Materials/index.js","routes/settings/Coupons/index.js","routes/settings/Nationalities/index.js","components/level/AddLevel/index.js","appRedux/actions/Levels.js","routes/settings/Levels/index.js","routes/settings/index.js"],"names":["columns","title","IntlMessages","id","dataIndex","align","key","render","type","icon","EditOutlined","data","Cities","state","selectedRowKeys","loading","start","setState","setTimeout","onSelectChange","console","log","this","rowSelection","onChange","hasSelected","length","span","size","PlusCircleFilled","DeleteOutlined","disabled","className","style","marginLeft","dir","bordered","dataSource","React","Component","Materials","direction","Coupons","Nationalities","pagination","position","AddLevel","props","name","level","onSaveLevel","onLevelClose","open","okText","SaveFilled","cancelText","toggle","visible","closable","onOk","onCancel","defaultMessage","placeholder","required","event","target","value","defaultValue","margin","loadLevels","levels","LOAD_LEVELS","Levels","addLevelState","onAddLevel","onSaveContact","onClick","connect","fetchLevels","params","page","perPage","sort","field","order","filter","dispatch","dataProvider","then","res","catch","err","FETCH_ERROR","payload","message","Settings","match","path","url","component"],"mappings":"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","file":"static/js/6.3a046c71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Table , Col , Row  } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { PlusCircleFilled , DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: ({id}) => (\r\n    <span>\r\n      <Button  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\r\n    </span>\r\n  ),\r\n align:'right'\r\n}];\r\n\r\nconst data = [];\r\n\r\n\r\nclass Cities extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Cities\"/></h1>}>\r\n           <Button size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <Table dir=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Cities;\r\n","import React from \"react\";\r\nimport {Button, Card, Table  , Row , Col} from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: ({id}) => (\r\n    <span>\r\n      <Button  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\r\n    </span>\r\n  ),\r\n align:'right'\r\n}];\r\n\r\nconst data = [];\r\n\r\n\r\nclass Materials extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Materials\"/></h1>}>\r\n            <Button size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <Table direction=\"rtl\"  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Materials;\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col} from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {PlusCircleFilled, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n}, {\r\n  title: <IntlMessages id=\"columns.code\"/>,\r\n  dataIndex: 'code',\r\n  align:'right'\r\n}, {\r\n  title: <IntlMessages id=\"columns.discount\"/>,\r\n  dataIndex: 'discount',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.start\"/>,\r\n  dataIndex:\"start\",\r\n  align:'right'\r\n}, {\r\n  title: <IntlMessages id=\"columns.end\"/>,\r\n  dataIndex: 'end',\r\n  align:'right'\r\n}];\r\n\r\nconst data = [];\r\n\r\n\r\nclass Coupons extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Coupons\"/></h1>}>\r\n           <Button size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <Table direction=\"rtl\"  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coupons;\r\n","import React from \"react\";\r\nimport {Button, Card, Table  , Row , Col} from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: ({id}) => (\r\n    <span>\r\n      <Button  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\r\n    </span>\r\n  ),\r\n align:'right'\r\n}];\r\n\r\nconst data = [];\r\n\r\n\r\nclass Nationalities extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Nationalities\"/></h1>}>\r\n            <Button size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <Table pagination={{position:'bottom center'}}  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nationalities;\r\n","import React from \"react\";\r\nimport { Input, Modal } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nclass AddLevel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { name } = props.level;\r\n    this.state = {\r\n      name\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { onSaveLevel, onLevelClose, open, level } = this.props;\r\n    const { name } = this.state;\r\n   \r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"level.cancelSave\"/> }\r\n        title={level.name === '' ?\r\n          <IntlMessages id=\"level.addLevel\"/> :\r\n          <IntlMessages id=\"level.saveLevel\"/>}\r\n        toggle={onLevelClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onLevelClose();\r\n          onSaveLevel({ name });\r\n          this.setState({ name: '' })\r\n        }}\r\n        onCancel={onLevelClose}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n            <div className=\"gx-form-group\">\r\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n             {\r\n               placeholder => (\r\n              <Input\r\n                required\r\n                placeholder={placeholder}\r\n                onChange={(event) => this.setState({name: event.target.value})}\r\n                defaultValue={name}\r\n                margin=\"none\"/>\r\n                )\r\n              }\r\n           </FormattedMessage>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddLevel;\r\n","import { dataProvider } from 'util/Api'\r\nimport { LOAD_LEVELS , FETCH_ERROR } from \"../../constants/ActionTypes\";\r\n\r\n\r\nexport const loadLevels = levels => ({\r\n  type: LOAD_LEVELS,\r\n  levels\r\n});\r\n\r\nexport const CreateLevel = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"CREATE\", \"levels/create\", params)\r\n  };\r\n};\r\n\r\nexport const UpdateLevel = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"UPDATE\", \"levels/update\", params)\r\n  };\r\n};\r\n\r\nexport const DeleteLevel = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"DELETE_MANY\", \"levels/delete\", params)\r\n  };\r\n};\r\n\r\nexport const fetchLevels = (params = {\r\n  pagination: { page: 1, perPage: 10 },\r\n  sort: { field: 'name' , order: 'ASC' },\r\n  filter: {},\r\n}) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_LIST\", \"levels\", params).then((res)=>{\r\n      dispatch(loadLevels(res))\r\n    }).catch(err => {\r\n      dispatch({type: FETCH_ERROR, payload: err.message});\r\n      console.log(\"Error****:\", err.message);\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const fetchOneLevel = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_ONE\", \"levels\", params)\r\n  };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\r\nimport AddLevel from \"components/level/AddLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchLevels } from \"../../../appRedux/actions/Levels\";\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: ({id}) => (\r\n    <span>\r\n      <Button  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\r\n    </span>\r\n  ),\r\n align:'right'\r\n}];\r\n\r\n\r\nclass Levels extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    addLevelState:false\r\n  };\r\n\r\n  onAddLevel = () => {\r\n    this.setState({addLevelState: true});\r\n  };\r\n  onLevelClose = () => {\r\n    this.setState({addLevelState: false});\r\n  };\r\n\r\n  onSaveContact = (data) => {\r\n    console.log(data)\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Levels\"/></h1>}>\r\n            <Button  onClick={this.onAddLevel} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddLevel open={this.state.addLevelState} level={{ 'name': '' }} onSaveLevel={this.onSaveLevel} onLevelClose={this.onLevelClose} />\r\n          <Table dir=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.levels}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    levels: state.levels,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchLevels })(Levels)\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\n\r\nimport Cities from \"./Cities\";\r\nimport Materials from \"./Materials\";\r\nimport Coupons from \"./Coupons\";\r\nimport Nationalities from \"./Nationalities\";\r\nimport Levels from \"./Levels\";\r\n\r\n\r\nconst Settings = ({match}) => (\r\n  <Switch>\r\n    <Route path={`${match.url}/cities`} component={Cities}/>\r\n    <Route path={`${match.url}/levels`} component={Levels}/>\r\n    <Route path={`${match.url}/materials`} component={Materials}/>\r\n    <Route path={`${match.url}/coupons`} component={Coupons}/>\r\n    <Route path={`${match.url}/nationalities`} component={Nationalities}/>\r\n  </Switch>\r\n);\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}