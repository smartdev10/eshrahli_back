{"version":3,"sources":["appRedux/actions/Settings.js","components/teacher/AddTeacher/index.js","components/teacher/EditTeacher/index.js","components/teacher/ShowTeacher/index.js","components/teacher/ShowTeachEarnings/index.js","routes/users/Teachers/index.js","components/student/AddStudent/index.js","components/student/EditStudent/index.js","routes/users/Students/index.js","components/users/AddUser/index.js","components/users/EditUser/index.js","routes/users/Members/index.js","routes/users/index.js"],"names":["CreateSetting","params","dispatch","dataProvider","UpdateSetting","DeleteSetting","fetchSettings","pagination","page","perPage","sort","field","order","filter","Option","Select","TextArea","Input","RadioGroup","Radio","Group","children","i","push","toString","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","options","label","value","AddTeacher","state","name","mobile","gender","password","city","nationality","qualification","bankiban","bankname","image","certificate","personalcard","levels","subjects","subjectsState","other_subjects","fileList","previewVisible","previewImage","previewTitle","loading","disabled","handleChangeLevels","ids","a","setState","props","fetchManyLevel","concat","map","level","length","distinctedSubjects","Map","item","has","id","set","type","filteredSujects","subj","includes","originalSubjects","sub","Array","from","Set","handleChangeSubjects","handleChangeOtherSubjects","imageFile","e","console","log","isArray","certificateFile","personalcardFile","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","this","onAddTeacher","onToggleModal","open","beforeUpload","width","okText","SaveFilled","cancelText","IntlMessages","title","toggle","visible","closable","onOk","message","onCancel","className","dir","labelCol","span","wrapperCol","defaultMessage","placeholder","Item","rules","required","onChange","event","target","margin","nationalities","index","mode","style","subject","cities","valuePropName","getValueFromEvent","onPreview","listType","icon","UploadOutlined","rows","footer","alt","src","React","Component","connect","EditTeacher","onSaveTeacher","teacher","useSelector","levelsState","globalSubjects","useDispatch","useState","setName","setMobile","setBankName","setBankIban","setNationality","setPassword","subjectsData","setSubjects","setSubjectState","setOther","setLevels","setCity","setQualification","setGender","setImage","setLoading","setDisabled","setCertificate","setPersonalCard","setFileList","setPreviewVisible","setPreviewImage","setPreviewTitle","useEffect","Object","keys","lev","then","memo","ShowTeacher","pdfjs","GlobalWorkerOptions","workerSrc","version","personalCard","numPages","setNumPages","pageNumber","setPageNumber","isMounted","useRef","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","current","xl","lg","md","sm","xs","marginTop","color","cover","split","pop","textAlign","onLoadError","onLoadSuccess","marginLeft","onClick","ShowTeacherEarning","reqs","setTotalReqs","tax","setTax","appComission","setComission","stats","setStatsData","axios","get","data","settings","find","s","slug","requests","statsData","req","total","grandTotal","columns","dataIndex","render","text","align","SyncOutlined","fontSize","spin","dataSource","bordered","Teachers","selectedRowKeys","loadingTable","addTeacherState","editTeacherState","showTeacherState","showTeacherEarnState","searchText","searchedColumn","getColumnSearchProps","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","onPressEnter","marginBottom","display","SearchOutlined","size","filterIcon","filtered","undefined","onFilter","record","toLowerCase","onFilterDropdownVisibleChange","setTimeout","select","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","modal","onEditTeacher","onShowTeacher","onShowTeacherEarnings","formData","FormData","key","arr","append","CreateTeacher","success","fetchTeachers","UpdateTeacher","onSelectChange","DeleteTeachers","catch","handleVisibleChange","cancel","fetchCities","fetchLevels","fetchSubjects","fetchNationalities","rowSelection","hasSelected","status","CheckCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","checkedChildren","unCheckedChildren","defaultChecked","checked","UpdateTeacherStatus","err","EditOutlined","EyeFilled","DollarOutlined","PlusCircleFilled","onVisibleChange","placement","onConfirm","DeleteOutlined","ShowTeachEarnings","locale","emptyText","rowKey","teachers","AddStudent","onAddStudent","EditStudent","onSaveStudent","student","Students","addStudentState","editStudentState","onEditStudent","CreateStudent","fetchStudents","UpdateStudent","DeleteStudents","students","AddUser","username","role","onAddUser","test","pattern","EditUser","onSaveUser","user","setUserName","setRole","Members","addUserState","editUserState","onEditUser","CreateUser","token","auth","decoded","jwtDecode","fetchUsers","userId","UpdateUser","direction","users","DeleteUsers","Users","match","path","component"],"mappings":"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","file":"static/js/10.df0c08c5.chunk.js","sourcesContent":["import { dataProvider } from 'util/Api'\r\nimport { LOAD_SETTINGS } from \"../../constants/ActionTypes\";\r\n\r\n\r\nexport const loadSettings = settings => ({\r\n  type: LOAD_SETTINGS,\r\n  settings\r\n});\r\n\r\nexport const CreateSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"CREATE\", \"settings/create\", params)\r\n  };\r\n};\r\n\r\nexport const UpdateSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"UPDATE\", \"settings/update\", params)\r\n  };\r\n};\r\n\r\nexport const DeleteSetting  = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"DELETE_MANY\", \"settings/delete\", params)\r\n  };\r\n};\r\n\r\nexport const fetchSettings = (params = {\r\n  pagination: { page: 1, perPage: 10 },\r\n  sort: { field: 'name' , order: 'ASC' },\r\n  filter: {},\r\n}) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_LIST\", \"settings\", params)\r\n  }\r\n}\r\n\r\n\r\nexport const fetchOneSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_ONE\", \"settings\", params)\r\n  };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Input, Modal , Select , Form  , Radio  , Upload , Button, message } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\nclass AddTeacher extends React.Component {\r\n\r\n  state = {\r\n    name:'',\r\n    mobile:'',\r\n    gender:'',\r\n    password:'',\r\n    city:'',\r\n    nationality:'',\r\n    qualification:'',\r\n    bankiban:'',\r\n    bankname:'',\r\n    image:null,\r\n    certificate:null,\r\n    personalcard:null,\r\n    levels:[],\r\n    subjects:[],\r\n    subjectsState:[],\r\n    other_subjects : [],\r\n    fileList:[],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    loading:false,\r\n    disabled:true\r\n  }\r\n\r\n  handleChangeLevels = async (ids) => {\r\n    this.setState({levels : ids , loading:true})\r\n    const levels = await this.props.fetchManyLevel({ids})\r\n    let subjects = []\r\n    subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n    if(subjects.length === 0){\r\n      this.setState({disabled : true ,  subjectsState:[] , loading:false})\r\n    }else{\r\n      const distinctedSubjects = [];\r\n      const map = new Map();\r\n      for (const item of subjects) {\r\n          if(!map.has(item.id)){\r\n              map.set(item.id, true);    // set any value to Map\r\n              distinctedSubjects.push({\r\n                  id: item.id,\r\n                  name: item.name,\r\n                  type: item.type\r\n              });\r\n          }\r\n      }\r\n      let filteredSujects = subjects.filter((subj) => this.state.subjectsState.includes(subj.id))\r\n      let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n      this.setState({loading:false , subjects:distinctedSubjects , subjectsState:Array.from(new Set(originalSubjects)) , disabled:false})\r\n    }\r\n  }\r\n\r\n  handleChangeSubjects = (subjects) => {\r\n    this.setState({subjectsState:subjects})\r\n  }\r\n\r\n  handleChangeOtherSubjects = (other_subjects) => {\r\n    this.setState({other_subjects})\r\n  }\r\n\r\n  imageFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({image: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  certificateFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({certificate: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  personalcardFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({personalcard: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { onAddTeacher, onToggleModal, open } = this.props;\r\n    const { subjectsState ,  name , password , mobile, fileList , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects , previewImage , previewTitle , previewVisible , other_subjects , loading , disabled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 },\r\n    };\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n    return (\r\n      <Modal\r\n        width={'50%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.addTeacher\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' ||  password === '' || mobile === '' || gender === '' || bankiban === '' || bankname === '' || image === null || personalcard === null || certificate === null || nationality === '' || city === '' || qualification === '' || levels.length === 0 || subjects.length === 0){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n            return null\r\n          }else{\r\n              onToggleModal(\"addTeacherState\");\r\n              onAddTeacher({  name , password , mobile , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects:subjectsState , other_subjects });\r\n              this.setState({ loading:false, disabled:true, name: '' , fileList:[] ,  password:'' , mobile : '' , gender:'' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addTeacherState\")\r\n          this.setState({loading:false, disabled:true, name: '' , fileList:[] , password:'' , gender:'' , mobile : '' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form  dir=\"rtl\" {...formItemLayout}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({mobile: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankname: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankiban: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      value={password}\r\n                      placeholder={placeholder}\r\n                      onChange={(event) => this.setState({password: event.target.value})}\r\n                      margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select value={nationality} placeholder={<IntlMessages id=\"columns.nationality\"/>} onChange={(value) => this.setState({nationality: value})} className=\"gx-mb-3\"   >\r\n                {this.props.nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={this.handleChangeLevels}>\r\n                    {this.props.levels.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsState}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={this.handleChangeSubjects}>\r\n                  {subjects.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={this.handleChangeOtherSubjects}>\r\n                  {this.props.subjects.filter((subject) => subject.type === 'other').map((subject , index) =>   <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city} placeholder={<IntlMessages id=\"columns.city\"/>}  onChange={(value) => this.setState({city: value})} className=\"gx-mb-3\"   >\r\n                  {this.props.cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup onChange={(e)=> this.setState({gender: e.target.value})} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.certificateFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.personalcardFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.imageFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification} placeholder={placeholder} onChange={(event) => this.setState({qualification: event.target.value})} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cities: state.cities,\r\n    levels: state.levels,\r\n    subjects: state.subjects,\r\n    nationalities: state.nationalities,\r\n  };\r\n}\r\nexport default connect(mapStateToProps , {fetchManyLevel})(AddTeacher)\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Upload , Select , Form , Radio , Button } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nconst EditTeacher = ({ onSaveTeacher, onToggleModal, open, teacher }) => {\r\n\r\n    const nationalities = useSelector(state => state.nationalities)\r\n    const cities = useSelector(state => state.cities)\r\n    const levelsState = useSelector(state => state.levels)\r\n    const globalSubjects = useSelector(state => state.subjects)\r\n    const dispatch = useDispatch()\r\n\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [bankname, setBankName] = useState('')\r\n    const [bankiban, setBankIban] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [subjectsData, setSubjects] = useState([])\r\n    const [subjectsState, setSubjectState] = useState([])\r\n    const [other_subjects, setOther] = useState([])\r\n    const [levels, setLevels] = useState([])\r\n    const [city, setCity] = useState('')\r\n    const [qualification, setQualification] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [image , setImage] = useState(null)\r\n    const [loading , setLoading] = useState(false)\r\n    const [disabled , setDisabled] = useState(false)\r\n    const [certificate , setCertificate] = useState(null)\r\n    const [personalcard , setPersonalCard] = useState(null)\r\n\r\n    const [fileList, setFileList] = useState([])\r\n\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        console.log(teacher)\r\n        setName(teacher.name)\r\n        setMobile(teacher.mobile)\r\n        setBankName(teacher.bankname)\r\n        setBankIban(teacher.bankiban)\r\n        setNationality(teacher.nationality.id)\r\n        setCity(teacher.city.id)\r\n        setQualification(teacher.qualification)\r\n        setGender(teacher.gender)\r\n        let subjects = teacher.subjects.map((sub)=> sub.id)\r\n        let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n        let levels = teacher.levels.map((lev)=> lev.id)\r\n        setSubjects(subjects)\r\n        setOther(other_subjects)\r\n        setLevels(levels)\r\n        dispatch(fetchManyLevel({ids:levels})).then((levels)=>{\r\n          let subjects = []\r\n          subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n          setSubjectState(subjects)\r\n          subjects = subjects.map((sub)=> sub.id)\r\n        })\r\n      }\r\n    }, [teacher, dispatch])\r\n\r\n    const handleChangeLevels = async (ids) => {\r\n      setLevels(ids)\r\n      setLoading(true)\r\n      const levels = await dispatch(fetchManyLevel({ids}))\r\n      let subjects = []\r\n      subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n      if(subjects.length === 0){\r\n        setLoading(false)\r\n        setSubjects([])\r\n      }else{\r\n        const distinctedSubjects = [];\r\n        const map = new Map();\r\n        for (const item of subjects) {\r\n            if(!map.has(item.id)){\r\n                map.set(item.id, true);    // set any value to Map\r\n                distinctedSubjects.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    type: item.type\r\n                });\r\n            }\r\n        }\r\n        setSubjectState(distinctedSubjects)\r\n        let filteredSujects = subjects.filter((subj) => subjectsData.includes(subj.id))\r\n        let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n        setSubjects(Array.from(new Set(originalSubjects)))\r\n        setLoading(false)\r\n        setDisabled(false)\r\n      }\r\n    }\r\n  \r\n    const  handleChangeSubjects = (subjects) => {\r\n     setSubjects(subjects)\r\n    }\r\n\r\n    const  handleChangeOtherSubjects = (subjects) => {\r\n      setOther(subjects)\r\n     }\r\n\r\n    const imageFile = e => {\r\n      console.log('Upload event:', e.file);\r\n     setImage(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const certificateFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setCertificate(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const personalcardFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setPersonalCard(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const handleCancel = () => setPreviewVisible(false);\r\n  \r\n    const handlePreview = async file => {\r\n      if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n      }\r\n      setPreviewVisible(true)\r\n      setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n      setPreviewImage(file.url || file.preview)\r\n    };\r\n\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.saveTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === ''| mobile === '' | bankiban === ''  | bankname === '' | gender === '' | nationality === '' | city === '' | qualification === '')\r\n            return;\r\n          onToggleModal(\"editTeacherState\");\r\n          onSaveTeacher({ id:teacher.id , name , mobile , password , bankiban , bankname , gender , image , certificate , personalcard , nationality , city , subjects:subjectsData , other_subjects, levels , qualification });\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          console.log(\"ok canceled\")\r\n          onToggleModal('editTeacherState')\r\n          setName(teacher.name)\r\n          setMobile(teacher.mobile)\r\n          setBankName(teacher.bankname)\r\n          setBankIban(teacher.bankiban)\r\n          setPassword('')\r\n          setNationality(teacher.nationality.id)\r\n          setCity(teacher.city.id)\r\n          setQualification(teacher.qualification)\r\n          setGender(teacher.gender)\r\n          let subjects = teacher.subjects.map((sub)=> sub.id)\r\n          let levels = teacher.levels.map((lev)=> lev.id)\r\n          let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n          setOther(other_subjects)\r\n          setSubjects(subjects)\r\n          setSubjectState(teacher.subjects)\r\n          setLevels(levels)\r\n          setFileList([])\r\n        }}>\r\n   \r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form dir=\"rtl\" labelCol={{ span: 6 }} wrapperCol={{ span: 14 }} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setMobile(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankIban(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={password}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={handleChangeLevels}>\r\n                    {levelsState.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            \r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsData}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={handleChangeSubjects}>\r\n                  {subjectsState.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={handleChangeOtherSubjects}>\r\n                  {globalSubjects.filter((subject) => subject.type === 'other').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select placeholder={<IntlMessages id=\"columns.nationality\"/>} value={nationality}  onChange={(value) => setNationality(value)} className=\"gx-mb-3\"   >\r\n                {nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city}   onChange={(value) => setCity(value)} className=\"gx-mb-3\"   >\r\n                  {cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender}   onChange={(event) => setGender(event.target.value)} options={[\r\n                      {label: 'ذكر', value: 'male'},\r\n                      {label: 'أنثى', value: 'female'},\r\n                    ]} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item  rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification}  onChange={(event) => setQualification(event.target.value)} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={certificateFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={personalcardFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={imageFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditTeacher);\r\n","import React , { useState , useEffect , useRef } from \"react\";\r\nimport { Modal , Card , Tag , Col , Row  } from \"antd\";\r\nimport { Document , Page , pdfjs } from 'react-pdf/dist/esm/entry.webpack';\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nconst ShowTeacher = ({ onToggleModal, open, teacher }) => {\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  \r\n  const [name, setName] = useState('')\r\n  const [mobile, setMobile] = useState('')\r\n  const [bankname, setBankName] = useState('')\r\n  const [bankiban, setBankIban] = useState('')\r\n  const [nationality, setNationality] = useState('')\r\n  const [subjectsState, setSubjects] = useState([])\r\n  const [levelsState, setLevels] = useState([])\r\n  const [city, setCity] = useState('')\r\n  const [qualification, setQualification] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [image , setImage] = useState('')\r\n  const [certificate , setCertificate] = useState('')\r\n  const [personalCard , setPersonalCard] = useState('')\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const isMounted = useRef(true);\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        if(isMounted.current){\r\n          setName(teacher.name)\r\n          setMobile(teacher.mobile)\r\n          setBankName(teacher.bankname)\r\n          setBankIban(teacher.bankiban)\r\n          setNationality(teacher.nationality.name)\r\n          setCity(teacher.city.name)\r\n          setQualification(teacher.qualification)\r\n          setGender(teacher.gender)\r\n          setImage(teacher.image)\r\n          setCertificate(teacher.certificate)\r\n          setPersonalCard(teacher.personalcard)\r\n          let subjects = teacher.subjects.map((sub)=> sub.name)\r\n          let levels = teacher.levels.map((lev)=> lev.name)\r\n          setSubjects(subjects)\r\n          setLevels(levels)\r\n        }\r\n      }\r\n\r\n\r\n      return ()=>{\r\n        isMounted.current = false;\r\n      }\r\n    }, [teacher])\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n      setNumPages(numPages);\r\n    }\r\n  \r\n    \r\n    function changePage(offset) { \r\n      setPageNumber(prevPageNumber => prevPageNumber + offset); \r\n    } \r\n    \r\n    function previousPage() { \r\n      changePage(-1); \r\n    } \r\n    \r\n    function nextPage() { \r\n      changePage(1); \r\n    } \r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.showTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('showTeacherState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Card dir=\"rtl\" title={name}>\r\n             <Row>\r\n             <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.mobile\"/>}>\r\n                {mobile}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankname\"/>}>\r\n              {bankname}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankiban\"/>}>\r\n              {bankiban}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.nationality\"/>}>\r\n              {nationality}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.city\"/>}>\r\n              {city}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.gender\"/>}>\r\n              {gender === 'male' ? \"ذكر\": \"أنثى\"}\r\n              </Card>\r\n              </Col>\r\n              \r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.qualification\"/>}>\r\n              {qualification}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.levels\"/>}>\r\n              {levelsState.map((lev,index)=>  <Tag key={index} color=\"blue\">{lev}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.materials\"/>}>\r\n              {subjectsState.map((sub , index)=>  <Tag key={index}  color=\"blue\">{sub}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                <Card style={{ marginTop: 16 }} type=\"inner\"  title=\"الصورة الشخصية\" >\r\n                    <Card  \r\n                      cover={<img alt=\"example\" src={`/teachers/${image}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                    </Card>\r\n                </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {\r\n                  personalCard.split('.').pop() === 'pdf' ? (\r\n                    <Col xl={24} lg={24} md={24} sm={24} xs={24} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة البطاقة الشخصية\" >\r\n                        <Document\r\n                            file={{\r\n                              url:`/teachers/${personalCard}`\r\n                            }}\r\n                            onLoadError={console.error}\r\n                            onLoadSuccess={onDocumentLoadSuccess}>\r\n                            <Page pageNumber={pageNumber} />\r\n                        </Document>\r\n                        <div> \r\n                        <div className=\"pagec\"> \r\n                        الصفحة {pageNumber || (numPages ? 1 : '--')} من {numPages || '--'} \r\n                        </div> \r\n                        <div className=\"buttonc\"> \r\n                        <button\r\n                          style={{marginLeft: 2}}\r\n                          type=\"button\"\r\n                          disabled={pageNumber <= 1} \r\n                          onClick={previousPage} \r\n                          className=\"Pre\"> \r\n                          السابق \r\n                        </button> \r\n                        <button \r\n                          type=\"button\"\r\n                          disabled={pageNumber >= numPages} \r\n                          onClick={nextPage}> \r\n                          التالي \r\n                        </button> \r\n                        </div> \r\n                      </div> \r\n                    </Card>\r\n                    </Col>\r\n                  ) : (\r\n                    <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة البطاقة الشخصية\" >\r\n                        <Card  \r\n                          cover={<img alt=\"example\" src={`/teachers/${personalCard}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                        </Card>\r\n                      </Card>\r\n                    </Col>\r\n                  ) \r\n                }\r\n              </Row>\r\n              <Row>\r\n                {\r\n                  certificate.split('.').pop() === 'pdf' ? (\r\n                    <Col xl={24} lg={24} md={24} sm={24} xs={24} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة الشهادة\" >\r\n                        <Document\r\n                            file={{\r\n                              url:`/teachers/${certificate}`\r\n                            }}\r\n                            onLoadError={console.error}\r\n                            onLoadSuccess={onDocumentLoadSuccess}>\r\n                            <Page pageNumber={pageNumber} />\r\n                        </Document>\r\n                        <div> \r\n                        <div className=\"pagec\"> \r\n                        الصفحة {pageNumber || (numPages ? 1 : '--')} من {numPages || '--'} \r\n                        </div> \r\n                        <div className=\"buttonc\"> \r\n                        <button\r\n                          style={{marginLeft: 2}}\r\n                          type=\"button\"\r\n                          disabled={pageNumber <= 1} \r\n                          onClick={previousPage} \r\n                          className=\"Pre\"> \r\n                          السابق \r\n                        </button> \r\n                        <button \r\n                          type=\"button\"\r\n                          disabled={pageNumber >= numPages} \r\n                          onClick={nextPage}> \r\n                          التالي \r\n                        </button> \r\n                        </div> \r\n                      </div> \r\n                    </Card>\r\n                    </Col>\r\n                  ) : (\r\n                    <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة الشهادة\" >\r\n                        <Card  \r\n                          cover={<img alt=\"example\" src={`/teachers/${certificate}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                        </Card>\r\n                      </Card>\r\n                    </Col>\r\n                  ) \r\n                }\r\n              </Row>\r\n          </Card>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowTeacher);\r\n","import React , { useState , useEffect , useRef } from \"react\";\r\nimport { Modal , Card , Table } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from 'axios'\r\nimport { fetchSettings } from \"../../../appRedux/actions/Settings\";\r\n\r\n\r\nconst ShowTeacherEarning = ({ onToggleModal, open, teacher }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [reqs, setTotalReqs] = useState(0)\r\n  const [loading, setLoading] = useState(true)\r\n  const [tax, setTax] = useState(0)\r\n  const [appComission, setComission] = useState(0)\r\n  const [stats, setStatsData] = useState([])\r\n  const dispatch = useDispatch()\r\n  const isMounted = useRef(true);\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        if(isMounted.current){\r\n          setName(teacher.name)\r\n          axios.get(`/api/teachers/${teacher.id}/earnings`).then(({data}) => {\r\n            dispatch(fetchSettings()).then(settings => {\r\n              setTax(settings.find(s => s.slug === 'tax'))\r\n              setComission(settings.find(s => s.slug === 'app-comission'))\r\n              if(Array.isArray(data.requests) && data.requests.length !== 0){\r\n                setTotalReqs(data.requests.length)\r\n                const statsData = data.requests.map(req => {\r\n                    return {\r\n                      total : req.total,\r\n                      tax : (req.total * tax) / 100,\r\n                      appComission : (req.total * appComission) / 100,\r\n                      grandTotal : req.total + ((req.total * tax) / 100) + ( (req.total * appComission) / 100)\r\n                    }\r\n                })\r\n                setStatsData(statsData)\r\n                setLoading(false)\r\n              }else{\r\n                setLoading(false)\r\n              }\r\n             })\r\n          })\r\n        }\r\n      }\r\n      \r\n      return ()=>{\r\n        isMounted.current = false;\r\n      }\r\n    }, [teacher,dispatch , tax , appComission])\r\n\r\n\r\n    const columns = [\r\n      {\r\n        title: 'حاصل الجمع',\r\n        dataIndex: 'total',\r\n        render: text => <span>{text}</span>,\r\n      },\r\n      {\r\n        title: 'الضريبة',\r\n        dataIndex: 'tax',\r\n        align: 'right',\r\n      },\r\n      {\r\n        title: 'نسبة التطبيق',\r\n        dataIndex: 'appComission',\r\n      },\r\n      {\r\n        title: 'القيمة الإجمالية',\r\n        dataIndex: 'grandTotal',\r\n      },\r\n    ];\r\n    \r\n\r\n    const gridStyle = {\r\n      textAlign: 'center',\r\n    };\r\n    \r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.earnings\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('showTeacherEarnState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Card style={gridStyle} dir=\"rtl\" title={name} >\r\n            {\r\n               loading ? <SyncOutlined style={{fontSize:'50px'}} spin /> :\r\n               (\r\n                <Table\r\n                title={() => 'عدد الطلبات ' + reqs }\r\n                columns={columns}\r\n                dataSource={stats}\r\n                pagination={false}\r\n                bordered\r\n                // footer={() => <span>\r\n                // القيمة الإجمالية : <Tag style={{fontSize:20 }} color='blue'><span style={{margin:10}}>{grandTotal} (SR)</span></Tag>\r\n                // </span>}\r\n                />\r\n               )\r\n            }\r\n          </Card>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowTeacherEarning);\r\n","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row, Divider , message , Popconfirm , Switch , Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { DollarOutlined , SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined, EyeFilled , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , UpdateTeacherStatus } from \"../../../appRedux/actions/Teachers\";\r\nimport { fetchSubjects } from \"../../../appRedux/actions/Subjects\";\r\nimport { fetchLevels } from \"../../../appRedux/actions/Levels\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\nimport { fetchNationalities } from \"../../../appRedux/actions/Nationalities\";\r\nimport { fetchSettings } from \"../../../appRedux/actions/Settings\";\r\nimport AddTeacher from \"components/teacher/AddTeacher\";\r\nimport EditTeacher from \"components/teacher/EditTeacher\";\r\nimport ShowTeacher from \"components/teacher/ShowTeacher\";\r\nimport ShowTeachEarnings from \"components/teacher/ShowTeachEarnings\";\r\n\r\nclass Teachers extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    loadingTable:false,\r\n    teacher:{},\r\n    addTeacherState:false,\r\n    editTeacherState:false,\r\n    showTeacherState:false,\r\n    showTeacherEarnState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`ابحث`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingTable:true })\r\n    await this.props.fetchTeachers()\r\n    await this.props.fetchCities()\r\n    await this.props.fetchLevels()\r\n    await this.props.fetchSubjects()\r\n    await this.props.fetchNationalities()\r\n    this.setState({ loadingTable:false })\r\n  }\r\n\r\n  onEditTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"editTeacherState\");\r\n    })\r\n  };\r\n\r\n  onShowTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"showTeacherState\");\r\n    })\r\n  };\r\n\r\n  onShowTeacherEarnings = (teacher) => {\r\n    this.props.fetchSettings()\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"showTeacherEarnState\");\r\n    })\r\n  };\r\n\r\n\r\n  onAddTeacher = async (data) => {\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.CreateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n\r\n  onSaveTeacher = async (data) => {\r\n    console.log(data)\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.UpdateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n \r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true , loadingTable:true });\r\n    this.props.DeleteTeachers({ids})\r\n    .then( async ()=>{\r\n      await this.props.fetchTeachers()\r\n      message.success('تم حذف المدرس');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const { loading, selectedRowKeys , visible , teacher , loadingTable , showTeacherState , showTeacherEarnState , editTeacherState } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    }, {\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title:  <IntlMessages id=\"columns.nationality\"/>,\r\n      dataIndex: 'nationality',\r\n      key: 'nationality' , render: (nationality) => nationality.name, \r\n      align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.city\"/>,\r\n      dataIndex: 'city',\r\n      key: 'city' , render: (city) => city.name, \r\n      align:'right',\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , id}) => (\r\n         <Switch checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"  defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateTeacherStatus({data:{status , id}})\r\n          .then(async()=> {\r\n            this.props.fetchTeachers().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (teacher) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditTeacher(teacher)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n          <Divider type=\"vertical\"/>\r\n          <Button onClick={() => this.onShowTeacher(teacher)}  dir=\"rtl\" type=\"primary\" icon={<EyeFilled />} > تفاصيل </Button>\r\n          <Divider type=\"vertical\"/>\r\n          <Button onClick={() => this.onShowTeacherEarnings(teacher)}  dir=\"rtl\" type=\"primary\" icon={<DollarOutlined />} > الحصيلة </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Teachers\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addTeacherState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\"/>\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">  \r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddTeacher open={this.state.addTeacherState} onAddTeacher={this.onAddTeacher} onToggleModal={this.onToggleModal} />\r\n          {editTeacherState && <EditTeacher open={this.state.editTeacherState} teacher={teacher} onSaveTeacher={this.onSaveTeacher} onToggleModal={this.onToggleModal} />}\r\n          {showTeacherState && <ShowTeacher open={this.state.showTeacherState} teacher={teacher} onToggleModal={this.onToggleModal} />}\r\n          {showTeacherEarnState && <ShowTeachEarnings open={this.state.showTeacherEarnState} teacher={teacher} onToggleModal={this.onToggleModal} />}\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id}  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.teachers}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    teachers: state.teachers,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { fetchSettings , UpdateTeacherStatus, fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , fetchCities , fetchLevels , fetchSubjects , fetchNationalities })(Teachers)\r\n","import React from \"react\";\r\nimport { Input, Modal  , Radio , Form , message  } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\nclass AddStudent extends React.Component {\r\n\r\n  state = {\r\n    name :'',\r\n    mobile :'',\r\n    gender :'',\r\n    password :'',\r\n  }\r\n\r\n  render() {\r\n    const { onAddStudent, onToggleModal, open } = this.props;\r\n    const { name , mobile , gender , password   } = this.state;\r\n   \r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.addStudent\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || mobile === '' || gender === '' || password === ''){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n          }else{\r\n            onToggleModal(\"addStudentState\");\r\n            onAddStudent({ name , mobile , gender , password });\r\n            this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addStudentState\")\r\n          this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup  onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   this.setState({gender: e.target.value})\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AddStudent\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Radio , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\n\r\nconst EditStudent = ({ onSaveStudent, onToggleModal, open, student }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n      if(Object.keys(student).length !== 0){\r\n        setName(student.name)\r\n        setMobile(student.mobile)\r\n        setGender(student.gender)\r\n      }\r\n    }, [student])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.saveStudent\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if ( name === '' || mobile === '' || gender === '')\r\n            return;\r\n          onToggleModal(\"editStudentState\");\r\n          onSaveStudent({ id:student.id , name  ,  mobile , gender  , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setGender(gender)\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          setName(student.name)\r\n          setMobile(student.mobile)\r\n          setGender(student.gender)\r\n          setPassword('')\r\n          onToggleModal('editStudentState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName( event.target.value)}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword( event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender} onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   setGender(e.target.value)\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditStudent);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , Divider , message , Popconfirm , Switch ,  Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport {SearchOutlined, PlusCircleFilled, DeleteOutlined , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone } from \"@ant-design/icons\";\r\nimport AddStudent from \"components/student/AddStudent\";\r\nimport EditStudent from \"components/student/EditStudent\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudents , CreateStudent , UpdateStudent, DeleteStudents } from \"../../../appRedux/actions/Students\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\n\r\n\r\nclass Students extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    student:{},\r\n    loadingTable:false,\r\n    addStudentState:false,\r\n    editStudentState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n \r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStudents()\r\n    this.props.fetchCities()\r\n    this.setState({ loading:false })\r\n  }\r\n\r\n  onEditStudent = (data) => {\r\n    this.setState({student:data}, ()=>{\r\n      this.onToggleModal(\"editStudentState\");\r\n    })\r\n  };\r\n\r\n  onAddStudent = async (data) => {\r\n    await this.props.CreateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n  };\r\n\r\n  onSaveStudent = async (data) => {\r\n    this.setState({loadingTable:true}); \r\n    await this.props.UpdateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n    this.setState({loadingTable:false}); \r\n\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true });\r\n    this.props.DeleteStudents({ids})\r\n    .then( async ()=>{\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n      message.success('تم حذف الطالب');\r\n      this.setState({ loadingTable: true });\r\n      await this.props.fetchStudents()\r\n      this.setState({ loadingTable: false });\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const {loading, selectedRowKeys , student , visible , loadingTable} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateStudent({data:{status , name , password:'' , mobile , id}})\r\n          .then(async()=> {\r\n            this.props.fetchStudents().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditStudent(data)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />} >تعديل</Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Students\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addStudentState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\" />\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddStudent open={this.state.addStudentState} onAddStudent={this.onAddStudent} onToggleModal={this.onToggleModal} />\r\n          <EditStudent open={this.state.editStudentState} student={student} onSaveStudent={this.onSaveStudent} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id} bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.students}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    students: state.students,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { fetchStudents ,  CreateStudent , UpdateStudent, DeleteStudents , fetchCities })(Students)\r\n","import React from \"react\";\r\nimport { Input, Modal , Select , Form ,message } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nclass AddUser extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name :'',\r\n      username:'',\r\n      mobile :'',\r\n      role :'',\r\n      password :'',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { onAddUser, onToggleModal, open } = this.props;\r\n    const { name , mobile , role , password , username } = this.state;\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.addUser\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          console.log(name,username,mobile,role,password)\r\n          if (name === '' || username === '' || mobile === '' || role === '' || password === ''){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n          }else if(/^[+]\\d{3}\\d{9}$/.test(mobile)){\r\n            onAddUser({ name , username , mobile , role , password });\r\n            this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n          }else{\r\n            message.error('المرجو إدخال رقم هاتف بطريقة صحيحة')\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addUserState\")\r\n          this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({name: event.target.value})}\r\n                  margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({username: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  type='password'\r\n                  required\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => this.setState({role: value})} placeholder={placeholder} className=\"gx-mb-3\"  style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Select , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nconst EditUser = ({ onSaveUser, onToggleModal, open, user }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [username, setUserName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(user).length !== 0){\r\n        setName(user.name)\r\n        setMobile(user.mobile)\r\n        setRole(user.role)\r\n        setUserName(user.username)\r\n      }\r\n    }, [user])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.saveUser\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || username === '' || mobile === '' || role === '')\r\n            return;\r\n          onToggleModal(\"editUserState\");\r\n          onSaveUser({ id:user.id , name , mobile , username , role , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setRole(role)\r\n          setUserName(username)\r\n\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal('editUserState')\r\n          setName(user.name)\r\n          setMobile(user.mobile)\r\n          setRole(user.role)\r\n          setUserName(user.username)\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='text'\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"username\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setUserName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"role\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => setRole(value)} placeholder={placeholder} className=\"gx-mb-3\" value={role} style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditUser);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , message , Input , Space , Switch } from \"antd\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined , PlusCircleFilled , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { fetchUsers , CreateUser , UpdateUser, DeleteUsers } from \"../../../appRedux/actions/Users\";\r\nimport { connect } from \"react-redux\";\r\nimport AddUser from \"components/users/AddUser\";\r\nimport EditUser from \"components/users/EditUser\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nclass Members extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    addUserState:false,\r\n    editUserState:false,\r\n    user:{} ,\r\n    searchText: '',\r\n    searchedColumn: '',\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      this.props.fetchUsers()\r\n    }\r\n  }\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  onEditUser = (user) => {\r\n    this.setState({user}, ()=>{\r\n      this.onToggleModal(\"editUserState\");\r\n    })\r\n  };\r\n\r\n  onAddUser = async (data) => {\r\n    await this.props.CreateUser({data}).then(async()=>{\r\n      message.success('تمت العملية بنجاح')\r\n      const { token } = this.props.auth \r\n      let decoded = null\r\n      if(token !== null){\r\n        decoded = jwtDecode(token)\r\n      }\r\n      if(decoded){\r\n        await  this.props.fetchUsers({\r\n          filter : {id : decoded.userId}\r\n        })\r\n      }else{\r\n        await this.props.fetchUsers()\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    }).catch((err)=> {\r\n      if(err.data.error === 'duplicate username'){\r\n        message.error('اسم المستخدم الذي تم إدخاله مكرر')\r\n      }else if(err.data.error === 'duplicate phonenumber'){\r\n        message.error('الهاتف الذي تم استخدامه مكرر')\r\n      }else{\r\n        message.error('عطل أثناء الإضافة!')\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    })\r\n  };\r\n\r\n  onSaveUser = async (data) => {\r\n    await this.props.UpdateUser({data})\r\n    message.success('تمت العملية بنجاح')\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      await  this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      await this.props.fetchUsers()\r\n    }\r\n  };\r\n\r\n \r\n  render() {\r\n    const { selectedRowKeys  , user} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.username\"/>,\r\n      dataIndex: 'username',\r\n      align:'right'\r\n    } ,{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('mobile')\r\n    },{\r\n      title: <IntlMessages id=\"columns.role\"/>,  dataIndex: '', key: 'x', render: ({role}) => (\r\n        <span>\r\n          {role === 'admin' ? 'أدمن' :  role === 'superuser' ? 'سوبر أدمن' : 'غير وارد' }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone title={status} twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , username , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateUser({data:{status , name , password:'' , username , mobile , id}})\r\n          .then(async()=> {\r\n            const { token } = this.props.auth \r\n            let decoded = null\r\n            if(token !== null){\r\n              decoded = jwtDecode(token)\r\n            }\r\n            if(decoded){\r\n              await  this.props.fetchUsers({\r\n                filter : {id : decoded.userId}\r\n              })\r\n            }else{\r\n              await this.props.fetchUsers()\r\n            }\r\n            message.success('تمت العملية بنجاح')\r\n            this.setState({loadingTable:false});\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditUser(data)}  type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Users\"/></h1>}>\r\n          <Button onClick={() => this.onToggleModal('addUserState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddUser open={this.state.addUserState} onAddUser={this.onAddUser} onToggleModal={this.onToggleModal} />\r\n          <EditUser open={this.state.editUserState} user={user} onSaveUser={this.onSaveUser} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} direction=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.users}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.users,\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps,{fetchUsers , CreateUser , UpdateUser, DeleteUsers })(Members)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Teachers from \"./Teachers\";\r\nimport Students from \"./Students\";\r\nimport Members from \"./Members\";\r\n\r\n\r\nconst Users = ({match}) => (\r\n  <Switch>\r\n    <Route path={`${match.url}/teachers`} component={Teachers}/>\r\n    <Route path={`${match.url}/students`} component={Students}/>\r\n    <Route path={`${match.url}/members`} component={Members}/>\r\n  </Switch>\r\n);\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}