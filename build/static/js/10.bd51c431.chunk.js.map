{"version":3,"sources":["appRedux/actions/Settings.js","components/teacher/AddTeacher/index.js","components/teacher/EditTeacher/index.js","components/teacher/ShowTeacher/index.js","components/teacher/ShowTeachEarnings/index.js","routes/users/Teachers/index.js","components/student/AddStudent/index.js","components/student/EditStudent/index.js","routes/users/Students/index.js","components/users/AddUser/index.js","components/users/EditUser/index.js","routes/users/Members/index.js","routes/users/index.js"],"names":["loadSettings","settings","type","LOAD_SETTINGS","CreateSetting","params","dispatch","dataProvider","UpdateSetting","DeleteSetting","fetchSettings","pagination","page","perPage","sort","field","order","filter","then","res","catch","err","FETCH_ERROR","payload","message","console","log","Option","Select","TextArea","Input","RadioGroup","Radio","Group","children","i","push","toString","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","options","label","value","AddTeacher","state","name","mobile","gender","password","city","nationality","qualification","bankiban","bankname","image","certificate","personalcard","levels","subjects","subjectsState","other_subjects","fileList","previewVisible","previewImage","previewTitle","loading","disabled","handleChangeLevels","ids","a","setState","props","fetchManyLevel","concat","map","level","length","distinctedSubjects","Map","item","has","id","set","filteredSujects","subj","includes","originalSubjects","sub","Array","from","Set","handleChangeSubjects","handleChangeOtherSubjects","imageFile","e","isArray","certificateFile","personalcardFile","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","this","onAddTeacher","onToggleModal","open","beforeUpload","width","okText","SaveFilled","cancelText","IntlMessages","title","toggle","visible","closable","onOk","onCancel","className","dir","labelCol","span","wrapperCol","defaultMessage","placeholder","Item","rules","required","onChange","event","target","margin","nationalities","index","mode","style","subject","cities","valuePropName","getValueFromEvent","onPreview","listType","icon","UploadOutlined","rows","footer","alt","src","React","Component","connect","EditTeacher","onSaveTeacher","teacher","useSelector","levelsState","globalSubjects","useDispatch","useState","setName","setMobile","setBankName","setBankIban","setNationality","setPassword","subjectsData","setSubjects","setSubjectState","setOther","setLevels","setCity","setQualification","setGender","setImage","setLoading","setDisabled","setCertificate","setPersonalCard","setFileList","setPreviewVisible","setPreviewImage","setPreviewTitle","useEffect","Object","keys","lev","memo","ShowTeacher","pdfjs","GlobalWorkerOptions","workerSrc","version","personalCard","numPages","setNumPages","pageNumber","setPageNumber","isMounted","useRef","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","current","xl","lg","md","sm","xs","marginTop","color","cover","split","pop","textAlign","onLoadError","onLoadSuccess","marginLeft","onClick","ShowTeacherEarning","app_settings","axios","get","data","requests","columns","dataIndex","render","text","align","SyncOutlined","fontSize","spin","dataSource","bordered","Teachers","selectedRowKeys","loadingTable","addTeacherState","editTeacherState","showTeacherState","showTeacherEarnState","searchText","searchedColumn","getColumnSearchProps","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","onPressEnter","marginBottom","display","SearchOutlined","size","filterIcon","filtered","undefined","onFilter","record","toLowerCase","onFilterDropdownVisibleChange","setTimeout","select","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","modal","onEditTeacher","onShowTeacher","onShowTeacherEarnings","formData","FormData","key","arr","append","CreateTeacher","success","fetchTeachers","UpdateTeacher","onSelectChange","DeleteTeachers","handleVisibleChange","cancel","fetchCities","fetchLevels","fetchSubjects","fetchNationalities","rowSelection","hasSelected","status","CheckCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","checkedChildren","unCheckedChildren","defaultChecked","checked","UpdateTeacherStatus","EditOutlined","EyeFilled","DollarOutlined","PlusCircleFilled","onVisibleChange","placement","onConfirm","DeleteOutlined","ShowTeachEarnings","locale","emptyText","rowKey","teachers","AddStudent","onAddStudent","EditStudent","onSaveStudent","student","Students","addStudentState","editStudentState","onEditStudent","CreateStudent","fetchStudents","UpdateStudent","DeleteStudents","students","AddUser","username","role","onAddUser","test","pattern","EditUser","onSaveUser","user","setUserName","setRole","Members","addUserState","editUserState","onEditUser","CreateUser","token","auth","decoded","jwtDecode","fetchUsers","userId","UpdateUser","direction","users","DeleteUsers","Users","match","path","component"],"mappings":"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","file":"static/js/10.bd51c431.chunk.js","sourcesContent":["import { dataProvider } from 'util/Api'\r\nimport { LOAD_SETTINGS , FETCH_ERROR } from \"../../constants/ActionTypes\";\r\n\r\n\r\nexport const loadSettings = settings => ({\r\n  type: LOAD_SETTINGS,\r\n  settings\r\n});\r\n\r\nexport const CreateSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"CREATE\", \"settings/create\", params)\r\n  };\r\n};\r\n\r\nexport const UpdateSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"UPDATE\", \"settings/update\", params)\r\n  };\r\n};\r\n\r\nexport const DeleteSetting  = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"DELETE_MANY\", \"settings/delete\", params)\r\n  };\r\n};\r\n\r\nexport const fetchSettings = (params = {\r\n  pagination: { page: 1, perPage: 10 },\r\n  sort: { field: 'name' , order: 'ASC' },\r\n  filter: {},\r\n}) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_LIST\", \"settings\", params).then((res)=>{\r\n      dispatch(loadSettings(res))\r\n    }).catch(err => {\r\n      dispatch({type: FETCH_ERROR, payload: err.message});\r\n      console.log(\"Error****:\", err.message);\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const fetchOneSetting = (params) => {\r\n  return dispatch => {\r\n    return dataProvider(\"GET_ONE\", \"settings\", params)\r\n  };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Input, Modal , Select , Form  , Radio  , Upload , Button, message } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\nclass AddTeacher extends React.Component {\r\n\r\n  state = {\r\n    name:'',\r\n    mobile:'',\r\n    gender:'',\r\n    password:'',\r\n    city:'',\r\n    nationality:'',\r\n    qualification:'',\r\n    bankiban:'',\r\n    bankname:'',\r\n    image:null,\r\n    certificate:null,\r\n    personalcard:null,\r\n    levels:[],\r\n    subjects:[],\r\n    subjectsState:[],\r\n    other_subjects : [],\r\n    fileList:[],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    loading:false,\r\n    disabled:true\r\n  }\r\n\r\n  handleChangeLevels = async (ids) => {\r\n    this.setState({levels : ids , loading:true})\r\n    const levels = await this.props.fetchManyLevel({ids})\r\n    let subjects = []\r\n    subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n    if(subjects.length === 0){\r\n      this.setState({disabled : true ,  subjectsState:[] , loading:false})\r\n    }else{\r\n      const distinctedSubjects = [];\r\n      const map = new Map();\r\n      for (const item of subjects) {\r\n          if(!map.has(item.id)){\r\n              map.set(item.id, true);    // set any value to Map\r\n              distinctedSubjects.push({\r\n                  id: item.id,\r\n                  name: item.name,\r\n                  type: item.type\r\n              });\r\n          }\r\n      }\r\n      let filteredSujects = subjects.filter((subj) => this.state.subjectsState.includes(subj.id))\r\n      let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n      this.setState({loading:false , subjects:distinctedSubjects , subjectsState:Array.from(new Set(originalSubjects)) , disabled:false})\r\n    }\r\n  }\r\n\r\n  handleChangeSubjects = (subjects) => {\r\n    this.setState({subjectsState:subjects})\r\n  }\r\n\r\n  handleChangeOtherSubjects = (other_subjects) => {\r\n    this.setState({other_subjects})\r\n  }\r\n\r\n  imageFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({image: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  certificateFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({certificate: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  personalcardFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({personalcard: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { onAddTeacher, onToggleModal, open } = this.props;\r\n    const { subjectsState ,  name , password , mobile, fileList , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects , previewImage , previewTitle , previewVisible , other_subjects , loading , disabled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 },\r\n    };\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n    return (\r\n      <Modal\r\n        width={'50%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.addTeacher\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' ||  password === '' || mobile === '' || gender === '' || bankiban === '' || bankname === '' || image === null || personalcard === null || certificate === null || nationality === '' || city === '' || qualification === '' || levels.length === 0 || subjects.length === 0){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n            return null\r\n          }else{\r\n              onToggleModal(\"addTeacherState\");\r\n              onAddTeacher({  name , password , mobile , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects:subjectsState , other_subjects });\r\n              this.setState({ loading:false, disabled:true, name: '' , fileList:[] ,  password:'' , mobile : '' , gender:'' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addTeacherState\")\r\n          this.setState({loading:false, disabled:true, name: '' , fileList:[] , password:'' , gender:'' , mobile : '' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form  dir=\"rtl\" {...formItemLayout}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({mobile: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankname: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankiban: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      value={password}\r\n                      placeholder={placeholder}\r\n                      onChange={(event) => this.setState({password: event.target.value})}\r\n                      margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select value={nationality} placeholder={<IntlMessages id=\"columns.nationality\"/>} onChange={(value) => this.setState({nationality: value})} className=\"gx-mb-3\"   >\r\n                {this.props.nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={this.handleChangeLevels}>\r\n                    {this.props.levels.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsState}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={this.handleChangeSubjects}>\r\n                  {subjects.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={this.handleChangeOtherSubjects}>\r\n                  {this.props.subjects.filter((subject) => subject.type === 'other').map((subject , index) =>   <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city} placeholder={<IntlMessages id=\"columns.city\"/>}  onChange={(value) => this.setState({city: value})} className=\"gx-mb-3\"   >\r\n                  {this.props.cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup onChange={(e)=> this.setState({gender: e.target.value})} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.certificateFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.personalcardFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.imageFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification} placeholder={placeholder} onChange={(event) => this.setState({qualification: event.target.value})} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cities: state.cities,\r\n    levels: state.levels,\r\n    subjects: state.subjects,\r\n    nationalities: state.nationalities,\r\n  };\r\n}\r\nexport default connect(mapStateToProps , {fetchManyLevel})(AddTeacher)\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Upload , Select , Form , Radio , Button } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nconst EditTeacher = ({ onSaveTeacher, onToggleModal, open, teacher }) => {\r\n\r\n    const nationalities = useSelector(state => state.nationalities)\r\n    const cities = useSelector(state => state.cities)\r\n    const levelsState = useSelector(state => state.levels)\r\n    const globalSubjects = useSelector(state => state.subjects)\r\n    const dispatch = useDispatch()\r\n\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [bankname, setBankName] = useState('')\r\n    const [bankiban, setBankIban] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [subjectsData, setSubjects] = useState([])\r\n    const [subjectsState, setSubjectState] = useState([])\r\n    const [other_subjects, setOther] = useState([])\r\n    const [levels, setLevels] = useState([])\r\n    const [city, setCity] = useState('')\r\n    const [qualification, setQualification] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [image , setImage] = useState(null)\r\n    const [loading , setLoading] = useState(false)\r\n    const [disabled , setDisabled] = useState(false)\r\n    const [certificate , setCertificate] = useState(null)\r\n    const [personalcard , setPersonalCard] = useState(null)\r\n\r\n    const [fileList, setFileList] = useState([])\r\n\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        console.log(teacher)\r\n        setName(teacher.name)\r\n        setMobile(teacher.mobile)\r\n        setBankName(teacher.bankname)\r\n        setBankIban(teacher.bankiban)\r\n        setNationality(teacher.nationality.id)\r\n        setCity(teacher.city.id)\r\n        setQualification(teacher.qualification)\r\n        setGender(teacher.gender)\r\n        let subjects = teacher.subjects.map((sub)=> sub.id)\r\n        let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n        let levels = teacher.levels.map((lev)=> lev.id)\r\n        setSubjects(subjects)\r\n        setOther(other_subjects)\r\n        setLevels(levels)\r\n        dispatch(fetchManyLevel({ids:levels})).then((levels)=>{\r\n          let subjects = []\r\n          subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n          setSubjectState(subjects)\r\n          subjects = subjects.map((sub)=> sub.id)\r\n        })\r\n      }\r\n    }, [teacher, dispatch])\r\n\r\n    const handleChangeLevels = async (ids) => {\r\n      setLevels(ids)\r\n      setLoading(true)\r\n      const levels = await dispatch(fetchManyLevel({ids}))\r\n      let subjects = []\r\n      subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n      if(subjects.length === 0){\r\n        setLoading(false)\r\n        setSubjects([])\r\n      }else{\r\n        const distinctedSubjects = [];\r\n        const map = new Map();\r\n        for (const item of subjects) {\r\n            if(!map.has(item.id)){\r\n                map.set(item.id, true);    // set any value to Map\r\n                distinctedSubjects.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    type: item.type\r\n                });\r\n            }\r\n        }\r\n        setSubjectState(distinctedSubjects)\r\n        let filteredSujects = subjects.filter((subj) => subjectsData.includes(subj.id))\r\n        let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n        setSubjects(Array.from(new Set(originalSubjects)))\r\n        setLoading(false)\r\n        setDisabled(false)\r\n      }\r\n    }\r\n  \r\n    const  handleChangeSubjects = (subjects) => {\r\n     setSubjects(subjects)\r\n    }\r\n\r\n    const  handleChangeOtherSubjects = (subjects) => {\r\n      setOther(subjects)\r\n     }\r\n\r\n    const imageFile = e => {\r\n      console.log('Upload event:', e.file);\r\n     setImage(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const certificateFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setCertificate(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const personalcardFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setPersonalCard(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const handleCancel = () => setPreviewVisible(false);\r\n  \r\n    const handlePreview = async file => {\r\n      if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n      }\r\n      setPreviewVisible(true)\r\n      setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n      setPreviewImage(file.url || file.preview)\r\n    };\r\n\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.saveTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === ''| mobile === '' | bankiban === ''  | bankname === '' | gender === '' | nationality === '' | city === '' | qualification === '')\r\n            return;\r\n          onToggleModal(\"editTeacherState\");\r\n          onSaveTeacher({ id:teacher.id , name , mobile , password , bankiban , bankname , gender , image , certificate , personalcard , nationality , city , subjects:subjectsData , other_subjects, levels , qualification });\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          console.log(\"ok canceled\")\r\n          onToggleModal('editTeacherState')\r\n          setName(teacher.name)\r\n          setMobile(teacher.mobile)\r\n          setBankName(teacher.bankname)\r\n          setBankIban(teacher.bankiban)\r\n          setPassword('')\r\n          setNationality(teacher.nationality.id)\r\n          setCity(teacher.city.id)\r\n          setQualification(teacher.qualification)\r\n          setGender(teacher.gender)\r\n          let subjects = teacher.subjects.map((sub)=> sub.id)\r\n          let levels = teacher.levels.map((lev)=> lev.id)\r\n          let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n          setOther(other_subjects)\r\n          setSubjects(subjects)\r\n          setSubjectState(teacher.subjects)\r\n          setLevels(levels)\r\n          setFileList([])\r\n        }}>\r\n   \r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form dir=\"rtl\" labelCol={{ span: 6 }} wrapperCol={{ span: 14 }} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setMobile(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankIban(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={password}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={handleChangeLevels}>\r\n                    {levelsState.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            \r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsData}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={handleChangeSubjects}>\r\n                  {subjectsState.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={handleChangeOtherSubjects}>\r\n                  {globalSubjects.filter((subject) => subject.type === 'other').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select placeholder={<IntlMessages id=\"columns.nationality\"/>} value={nationality}  onChange={(value) => setNationality(value)} className=\"gx-mb-3\"   >\r\n                {nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city}   onChange={(value) => setCity(value)} className=\"gx-mb-3\"   >\r\n                  {cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender}   onChange={(event) => setGender(event.target.value)} options={[\r\n                      {label: 'ذكر', value: 'male'},\r\n                      {label: 'أنثى', value: 'female'},\r\n                    ]} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item  rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification}  onChange={(event) => setQualification(event.target.value)} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={certificateFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={personalcardFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={imageFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditTeacher);\r\n","import React , { useState , useEffect , useRef } from \"react\";\r\nimport { Modal , Card , Tag , Col , Row  } from \"antd\";\r\nimport { Document , Page , pdfjs } from 'react-pdf/dist/esm/entry.webpack';\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nconst ShowTeacher = ({ onToggleModal, open, teacher }) => {\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  \r\n  const [name, setName] = useState('')\r\n  const [mobile, setMobile] = useState('')\r\n  const [bankname, setBankName] = useState('')\r\n  const [bankiban, setBankIban] = useState('')\r\n  const [nationality, setNationality] = useState('')\r\n  const [subjectsState, setSubjects] = useState([])\r\n  const [levelsState, setLevels] = useState([])\r\n  const [city, setCity] = useState('')\r\n  const [qualification, setQualification] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [image , setImage] = useState('')\r\n  const [certificate , setCertificate] = useState('')\r\n  const [personalCard , setPersonalCard] = useState('')\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const isMounted = useRef(true);\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        if(isMounted.current){\r\n          setName(teacher.name)\r\n          setMobile(teacher.mobile)\r\n          setBankName(teacher.bankname)\r\n          setBankIban(teacher.bankiban)\r\n          setNationality(teacher.nationality.name)\r\n          setCity(teacher.city.name)\r\n          setQualification(teacher.qualification)\r\n          setGender(teacher.gender)\r\n          setImage(teacher.image)\r\n          setCertificate(teacher.certificate)\r\n          setPersonalCard(teacher.personalcard)\r\n          let subjects = teacher.subjects.map((sub)=> sub.name)\r\n          let levels = teacher.levels.map((lev)=> lev.name)\r\n          setSubjects(subjects)\r\n          setLevels(levels)\r\n        }\r\n      }\r\n\r\n\r\n      return ()=>{\r\n        isMounted.current = false;\r\n      }\r\n    }, [teacher])\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n      setNumPages(numPages);\r\n    }\r\n  \r\n    \r\n    function changePage(offset) { \r\n      setPageNumber(prevPageNumber => prevPageNumber + offset); \r\n    } \r\n    \r\n    function previousPage() { \r\n      changePage(-1); \r\n    } \r\n    \r\n    function nextPage() { \r\n      changePage(1); \r\n    } \r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.showTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('showTeacherState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Card dir=\"rtl\" title={name}>\r\n             <Row>\r\n             <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.mobile\"/>}>\r\n                {mobile}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankname\"/>}>\r\n              {bankname}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankiban\"/>}>\r\n              {bankiban}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.nationality\"/>}>\r\n              {nationality}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.city\"/>}>\r\n              {city}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.gender\"/>}>\r\n              {gender === 'male' ? \"ذكر\": \"أنثى\"}\r\n              </Card>\r\n              </Col>\r\n              \r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.qualification\"/>}>\r\n              {qualification}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.levels\"/>}>\r\n              {levelsState.map((lev,index)=>  <Tag key={index} color=\"blue\">{lev}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.materials\"/>}>\r\n              {subjectsState.map((sub , index)=>  <Tag key={index}  color=\"blue\">{sub}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                <Card style={{ marginTop: 16 }} type=\"inner\"  title=\"الصورة الشخصية\" >\r\n                    <Card  \r\n                      cover={<img alt=\"example\" src={`/teachers/${image}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                    </Card>\r\n                </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {\r\n                  personalCard.split('.').pop() === 'pdf' ? (\r\n                    <Col xl={24} lg={24} md={24} sm={24} xs={24} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة البطاقة الشخصية\" >\r\n                        <Document\r\n                            file={{\r\n                              url:`/teachers/${personalCard}`\r\n                            }}\r\n                            onLoadError={console.error}\r\n                            onLoadSuccess={onDocumentLoadSuccess}>\r\n                            <Page pageNumber={pageNumber} />\r\n                        </Document>\r\n                        <div> \r\n                        <div className=\"pagec\"> \r\n                        الصفحة {pageNumber || (numPages ? 1 : '--')} من {numPages || '--'} \r\n                        </div> \r\n                        <div className=\"buttonc\"> \r\n                        <button\r\n                          style={{marginLeft: 2}}\r\n                          type=\"button\"\r\n                          disabled={pageNumber <= 1} \r\n                          onClick={previousPage} \r\n                          className=\"Pre\"> \r\n                          السابق \r\n                        </button> \r\n                        <button \r\n                          type=\"button\"\r\n                          disabled={pageNumber >= numPages} \r\n                          onClick={nextPage}> \r\n                          التالي \r\n                        </button> \r\n                        </div> \r\n                      </div> \r\n                    </Card>\r\n                    </Col>\r\n                  ) : (\r\n                    <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة البطاقة الشخصية\" >\r\n                        <Card  \r\n                          cover={<img alt=\"example\" src={`/teachers/${personalCard}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                        </Card>\r\n                      </Card>\r\n                    </Col>\r\n                  ) \r\n                }\r\n              </Row>\r\n              <Row>\r\n                {\r\n                  certificate.split('.').pop() === 'pdf' ? (\r\n                    <Col xl={24} lg={24} md={24} sm={24} xs={24} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة الشهادة\" >\r\n                        <Document\r\n                            file={{\r\n                              url:`/teachers/${certificate}`\r\n                            }}\r\n                            onLoadError={console.error}\r\n                            onLoadSuccess={onDocumentLoadSuccess}>\r\n                            <Page pageNumber={pageNumber} />\r\n                        </Document>\r\n                        <div> \r\n                        <div className=\"pagec\"> \r\n                        الصفحة {pageNumber || (numPages ? 1 : '--')} من {numPages || '--'} \r\n                        </div> \r\n                        <div className=\"buttonc\"> \r\n                        <button\r\n                          style={{marginLeft: 2}}\r\n                          type=\"button\"\r\n                          disabled={pageNumber <= 1} \r\n                          onClick={previousPage} \r\n                          className=\"Pre\"> \r\n                          السابق \r\n                        </button> \r\n                        <button \r\n                          type=\"button\"\r\n                          disabled={pageNumber >= numPages} \r\n                          onClick={nextPage}> \r\n                          التالي \r\n                        </button> \r\n                        </div> \r\n                      </div> \r\n                    </Card>\r\n                    </Col>\r\n                  ) : (\r\n                    <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n                      <Card style={{ marginTop: 16 , textAlign:\"center\" }} type=\"inner\"  title=\"صورة الشهادة\" >\r\n                        <Card  \r\n                          cover={<img alt=\"example\" src={`/teachers/${certificate}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                        </Card>\r\n                      </Card>\r\n                    </Col>\r\n                  ) \r\n                }\r\n              </Row>\r\n          </Card>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowTeacher);\r\n","import React , { useState , useEffect , useRef } from \"react\";\r\nimport { Modal , Card , Table , Tag } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from 'axios'\r\n\r\n\r\nconst ShowTeacherEarning = ({ onToggleModal, open, teacher }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  // const [stats, setStatsData] = useState([])\r\n  const settings = useSelector(state => state.app_settings)\r\n  const isMounted = useRef(true);\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        if(isMounted.current){\r\n          setName(teacher.name)\r\n          console.log(settings)\r\n          axios.get(`/api/teachers/${teacher.id}/earnings`).then(res => {\r\n            if(Array.isArray(res.data.requests) && res.data.requests.length !== 0){\r\n               \r\n            }\r\n            setLoading(false)\r\n          })\r\n        }\r\n      }\r\n      \r\n      return ()=>{\r\n        isMounted.current = false;\r\n      }\r\n    }, [teacher,settings])\r\n\r\n\r\n    const columns = [\r\n      {\r\n        title: 'حاصل الجمع',\r\n        dataIndex: 'total',\r\n        render: text => <span>{text}</span>,\r\n      },\r\n      {\r\n        title: 'الضريبة',\r\n        dataIndex: 'tax',\r\n        align: 'right',\r\n      },\r\n      {\r\n        title: 'نسبة التطبيق',\r\n        dataIndex: 'app-comission',\r\n      },\r\n    ];\r\n    \r\n    const data = [];\r\n\r\n    const gridStyle = {\r\n      textAlign: 'center',\r\n    };\r\n    \r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.earnings\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('showTeacherEarnState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Card style={gridStyle} dir=\"rtl\" title={name}>\r\n            {\r\n               loading ? <SyncOutlined style={{fontSize:'50px'}} spin /> :\r\n               (\r\n                <Table\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={false}\r\n                bordered\r\n                footer={() => <span>\r\n                القيمة الإجمالية : <Tag style={{fontSize:20 }} color='blue'><span style={{margin:10}}>0 (SR)</span></Tag>\r\n                </span>}\r\n                />\r\n               )\r\n            }\r\n          </Card>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowTeacherEarning);\r\n","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row, Divider , message , Popconfirm , Switch , Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { DollarOutlined , SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined, EyeFilled , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , UpdateTeacherStatus } from \"../../../appRedux/actions/Teachers\";\r\nimport { fetchSubjects } from \"../../../appRedux/actions/Subjects\";\r\nimport { fetchLevels } from \"../../../appRedux/actions/Levels\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\nimport { fetchNationalities } from \"../../../appRedux/actions/Nationalities\";\r\nimport { fetchSettings } from \"../../../appRedux/actions/Settings\";\r\nimport AddTeacher from \"components/teacher/AddTeacher\";\r\nimport EditTeacher from \"components/teacher/EditTeacher\";\r\nimport ShowTeacher from \"components/teacher/ShowTeacher\";\r\nimport ShowTeachEarnings from \"components/teacher/ShowTeachEarnings\";\r\n\r\nclass Teachers extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    loadingTable:false,\r\n    teacher:{},\r\n    addTeacherState:false,\r\n    editTeacherState:false,\r\n    showTeacherState:false,\r\n    showTeacherEarnState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`ابحث`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingTable:true })\r\n    await this.props.fetchTeachers()\r\n    await this.props.fetchCities()\r\n    await this.props.fetchLevels()\r\n    await this.props.fetchSubjects()\r\n    await this.props.fetchNationalities()\r\n    this.setState({ loadingTable:false })\r\n  }\r\n\r\n  onEditTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"editTeacherState\");\r\n    })\r\n  };\r\n\r\n  onShowTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"showTeacherState\");\r\n    })\r\n  };\r\n\r\n  onShowTeacherEarnings = (teacher) => {\r\n    this.props.fetchSettings()\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"showTeacherEarnState\");\r\n    })\r\n  };\r\n\r\n\r\n  onAddTeacher = async (data) => {\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.CreateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n\r\n  onSaveTeacher = async (data) => {\r\n    console.log(data)\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.UpdateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n \r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true , loadingTable:true });\r\n    this.props.DeleteTeachers({ids})\r\n    .then( async ()=>{\r\n      await this.props.fetchTeachers()\r\n      message.success('تم حذف المدرس');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const { loading, selectedRowKeys , visible , teacher , loadingTable , showTeacherState , showTeacherEarnState , editTeacherState } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    }, {\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title:  <IntlMessages id=\"columns.nationality\"/>,\r\n      dataIndex: 'nationality',\r\n      key: 'nationality' , render: (nationality) => nationality.name, \r\n      align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.city\"/>,\r\n      dataIndex: 'city',\r\n      key: 'city' , render: (city) => city.name, \r\n      align:'right',\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , id}) => (\r\n         <Switch checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"  defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateTeacherStatus({data:{status , id}})\r\n          .then(async()=> {\r\n            this.props.fetchTeachers().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (teacher) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditTeacher(teacher)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n          <Divider type=\"vertical\"/>\r\n          <Button onClick={() => this.onShowTeacher(teacher)}  dir=\"rtl\" type=\"primary\" icon={<EyeFilled />} > تفاصيل </Button>\r\n          <Divider type=\"vertical\"/>\r\n          <Button onClick={() => this.onShowTeacherEarnings(teacher)}  dir=\"rtl\" type=\"primary\" icon={<DollarOutlined />} > الحصيلة </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Teachers\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addTeacherState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\"/>\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">  \r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddTeacher open={this.state.addTeacherState} onAddTeacher={this.onAddTeacher} onToggleModal={this.onToggleModal} />\r\n          {editTeacherState && <EditTeacher open={this.state.editTeacherState} teacher={teacher} onSaveTeacher={this.onSaveTeacher} onToggleModal={this.onToggleModal} />}\r\n          {showTeacherState && <ShowTeacher open={this.state.showTeacherState} teacher={teacher} onToggleModal={this.onToggleModal} />}\r\n          {showTeacherEarnState && <ShowTeachEarnings open={this.state.showTeacherEarnState} teacher={teacher} onToggleModal={this.onToggleModal} />}\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id}  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.teachers}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    teachers: state.teachers,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { fetchSettings , UpdateTeacherStatus, fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , fetchCities , fetchLevels , fetchSubjects , fetchNationalities })(Teachers)\r\n","import React from \"react\";\r\nimport { Input, Modal  , Radio , Form , message  } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\nclass AddStudent extends React.Component {\r\n\r\n  state = {\r\n    name :'',\r\n    mobile :'',\r\n    gender :'',\r\n    password :'',\r\n  }\r\n\r\n  render() {\r\n    const { onAddStudent, onToggleModal, open } = this.props;\r\n    const { name , mobile , gender , password   } = this.state;\r\n   \r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.addStudent\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || mobile === '' || gender === '' || password === ''){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n          }else{\r\n            onToggleModal(\"addStudentState\");\r\n            onAddStudent({ name , mobile , gender , password });\r\n            this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addStudentState\")\r\n          this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup  onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   this.setState({gender: e.target.value})\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AddStudent\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Radio , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\n\r\nconst EditStudent = ({ onSaveStudent, onToggleModal, open, student }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n      if(Object.keys(student).length !== 0){\r\n        setName(student.name)\r\n        setMobile(student.mobile)\r\n        setGender(student.gender)\r\n      }\r\n    }, [student])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.saveStudent\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if ( name === '' || mobile === '' || gender === '')\r\n            return;\r\n          onToggleModal(\"editStudentState\");\r\n          onSaveStudent({ id:student.id , name  ,  mobile , gender  , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setGender(gender)\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          setName(student.name)\r\n          setMobile(student.mobile)\r\n          setGender(student.gender)\r\n          setPassword('')\r\n          onToggleModal('editStudentState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName( event.target.value)}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword( event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender} onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   setGender(e.target.value)\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditStudent);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , Divider , message , Popconfirm , Switch ,  Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport {SearchOutlined, PlusCircleFilled, DeleteOutlined , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone } from \"@ant-design/icons\";\r\nimport AddStudent from \"components/student/AddStudent\";\r\nimport EditStudent from \"components/student/EditStudent\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudents , CreateStudent , UpdateStudent, DeleteStudents } from \"../../../appRedux/actions/Students\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\n\r\n\r\nclass Students extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    student:{},\r\n    loadingTable:false,\r\n    addStudentState:false,\r\n    editStudentState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n \r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStudents()\r\n    this.props.fetchCities()\r\n    this.setState({ loading:false })\r\n  }\r\n\r\n  onEditStudent = (data) => {\r\n    this.setState({student:data}, ()=>{\r\n      this.onToggleModal(\"editStudentState\");\r\n    })\r\n  };\r\n\r\n  onAddStudent = async (data) => {\r\n    await this.props.CreateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n  };\r\n\r\n  onSaveStudent = async (data) => {\r\n    this.setState({loadingTable:true}); \r\n    await this.props.UpdateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n    this.setState({loadingTable:false}); \r\n\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true });\r\n    this.props.DeleteStudents({ids})\r\n    .then( async ()=>{\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n      message.success('تم حذف الطالب');\r\n      this.setState({ loadingTable: true });\r\n      await this.props.fetchStudents()\r\n      this.setState({ loadingTable: false });\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const {loading, selectedRowKeys , student , visible , loadingTable} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateStudent({data:{status , name , password:'' , mobile , id}})\r\n          .then(async()=> {\r\n            this.props.fetchStudents().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditStudent(data)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />} >تعديل</Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Students\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addStudentState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\" />\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddStudent open={this.state.addStudentState} onAddStudent={this.onAddStudent} onToggleModal={this.onToggleModal} />\r\n          <EditStudent open={this.state.editStudentState} student={student} onSaveStudent={this.onSaveStudent} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id} bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.students}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    students: state.students,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { fetchStudents ,  CreateStudent , UpdateStudent, DeleteStudents , fetchCities })(Students)\r\n","import React from \"react\";\r\nimport { Input, Modal , Select , Form ,message } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nclass AddUser extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name :'',\r\n      username:'',\r\n      mobile :'',\r\n      role :'',\r\n      password :'',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { onAddUser, onToggleModal, open } = this.props;\r\n    const { name , mobile , role , password , username } = this.state;\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.addUser\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          console.log(name,username,mobile,role,password)\r\n          if (name === '' || username === '' || mobile === '' || role === '' || password === ''){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n          }else if(/^[+]\\d{3}\\d{9}$/.test(mobile)){\r\n            onAddUser({ name , username , mobile , role , password });\r\n            this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n          }else{\r\n            message.error('المرجو إدخال رقم هاتف بطريقة صحيحة')\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addUserState\")\r\n          this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({name: event.target.value})}\r\n                  margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({username: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  type='password'\r\n                  required\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => this.setState({role: value})} placeholder={placeholder} className=\"gx-mb-3\"  style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Select , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nconst EditUser = ({ onSaveUser, onToggleModal, open, user }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [username, setUserName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(user).length !== 0){\r\n        setName(user.name)\r\n        setMobile(user.mobile)\r\n        setRole(user.role)\r\n        setUserName(user.username)\r\n      }\r\n    }, [user])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.saveUser\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || username === '' || mobile === '' || role === '')\r\n            return;\r\n          onToggleModal(\"editUserState\");\r\n          onSaveUser({ id:user.id , name , mobile , username , role , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setRole(role)\r\n          setUserName(username)\r\n\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal('editUserState')\r\n          setName(user.name)\r\n          setMobile(user.mobile)\r\n          setRole(user.role)\r\n          setUserName(user.username)\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='text'\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"username\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setUserName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"role\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => setRole(value)} placeholder={placeholder} className=\"gx-mb-3\" value={role} style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditUser);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , message , Input , Space , Switch } from \"antd\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined , PlusCircleFilled , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { fetchUsers , CreateUser , UpdateUser, DeleteUsers } from \"../../../appRedux/actions/Users\";\r\nimport { connect } from \"react-redux\";\r\nimport AddUser from \"components/users/AddUser\";\r\nimport EditUser from \"components/users/EditUser\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nclass Members extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    addUserState:false,\r\n    editUserState:false,\r\n    user:{} ,\r\n    searchText: '',\r\n    searchedColumn: '',\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      this.props.fetchUsers()\r\n    }\r\n  }\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  onEditUser = (user) => {\r\n    this.setState({user}, ()=>{\r\n      this.onToggleModal(\"editUserState\");\r\n    })\r\n  };\r\n\r\n  onAddUser = async (data) => {\r\n    await this.props.CreateUser({data}).then(async()=>{\r\n      message.success('تمت العملية بنجاح')\r\n      const { token } = this.props.auth \r\n      let decoded = null\r\n      if(token !== null){\r\n        decoded = jwtDecode(token)\r\n      }\r\n      if(decoded){\r\n        await  this.props.fetchUsers({\r\n          filter : {id : decoded.userId}\r\n        })\r\n      }else{\r\n        await this.props.fetchUsers()\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    }).catch((err)=> {\r\n      if(err.data.error === 'duplicate username'){\r\n        message.error('اسم المستخدم الذي تم إدخاله مكرر')\r\n      }else if(err.data.error === 'duplicate phonenumber'){\r\n        message.error('الهاتف الذي تم استخدامه مكرر')\r\n      }else{\r\n        message.error('عطل أثناء الإضافة!')\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    })\r\n  };\r\n\r\n  onSaveUser = async (data) => {\r\n    await this.props.UpdateUser({data})\r\n    message.success('تمت العملية بنجاح')\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      await  this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      await this.props.fetchUsers()\r\n    }\r\n  };\r\n\r\n \r\n  render() {\r\n    const { selectedRowKeys  , user} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.username\"/>,\r\n      dataIndex: 'username',\r\n      align:'right'\r\n    } ,{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('mobile')\r\n    },{\r\n      title: <IntlMessages id=\"columns.role\"/>,  dataIndex: '', key: 'x', render: ({role}) => (\r\n        <span>\r\n          {role === 'admin' ? 'أدمن' :  role === 'superuser' ? 'سوبر أدمن' : 'غير وارد' }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone title={status} twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , username , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateUser({data:{status , name , password:'' , username , mobile , id}})\r\n          .then(async()=> {\r\n            const { token } = this.props.auth \r\n            let decoded = null\r\n            if(token !== null){\r\n              decoded = jwtDecode(token)\r\n            }\r\n            if(decoded){\r\n              await  this.props.fetchUsers({\r\n                filter : {id : decoded.userId}\r\n              })\r\n            }else{\r\n              await this.props.fetchUsers()\r\n            }\r\n            message.success('تمت العملية بنجاح')\r\n            this.setState({loadingTable:false});\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditUser(data)}  type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Users\"/></h1>}>\r\n          <Button onClick={() => this.onToggleModal('addUserState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddUser open={this.state.addUserState} onAddUser={this.onAddUser} onToggleModal={this.onToggleModal} />\r\n          <EditUser open={this.state.editUserState} user={user} onSaveUser={this.onSaveUser} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} direction=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.users}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.users,\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps,{fetchUsers , CreateUser , UpdateUser, DeleteUsers })(Members)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Teachers from \"./Teachers\";\r\nimport Students from \"./Students\";\r\nimport Members from \"./Members\";\r\n\r\n\r\nconst Users = ({match}) => (\r\n  <Switch>\r\n    <Route path={`${match.url}/teachers`} component={Teachers}/>\r\n    <Route path={`${match.url}/students`} component={Students}/>\r\n    <Route path={`${match.url}/members`} component={Members}/>\r\n  </Switch>\r\n);\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}