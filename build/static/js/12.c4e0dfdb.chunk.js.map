{"version":3,"sources":["components/city/AddCity/index.js","components/city/EditCity/index.js","routes/settings/Cities/index.js","components/subject/AddSubject/index.js","components/subject/EditSubject/index.js","routes/settings/Subjects/index.js","components/coupon/AddCoupon/index.js","components/coupon/EditCoupon/index.js","routes/settings/Coupons/index.js","components/nationality/AddNationality/index.js","components/nationality/EditNationality/index.js","routes/settings/Nationalities/index.js","components/level/AddLevel/index.js","components/level/EditLevel/index.js","routes/settings/Levels/index.js","routes/settings/index.js"],"names":["AddCity","state","name","this","props","onAddCity","onToggleModal","open","okText","SaveFilled","cancelText","IntlMessages","id","title","toggle","visible","closable","onOk","setState","onCancel","className","defaultMessage","placeholder","required","value","onChange","event","target","margin","React","Component","memo","onSaveCity","city","useState","setName","useEffect","Object","keys","length","console","log","Cities","selectedRowKeys","loading","addCityState","editCityState","searchText","searchedColumn","getColumnSearchProps","dataIndex","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","e","onPressEnter","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","modal","onEditCity","data","a","CreateCity","message","success","fetchCities","UpdateCity","onSelectChange","ids","DeleteCity","then","catch","error","handleVisibleChange","cancel","rowSelection","hasSelected","columns","align","key","EditOutlined","span","PlusCircleFilled","onVisibleChange","placement","onConfirm","DeleteOutlined","disabled","marginLeft","locale","emptyText","rowKey","bordered","dataSource","cities","connect","RadioGroup","Radio","Group","options","label","AddSubject","onAddSubject","labelCol","wrapperCol","Item","rules","onSaveSubject","subject","setType","Subjects","addSubjectState","editSubjectState","onEditSubject","CreateSubject","fetchSubjects","UpdateSubject","DeleteSubject","direction","subjects","TextArea","Input","RangePicker","DatePicker","AddCoupon","code","discount","description","start","end","dates","dateStrings","onAddCoupon","parseFloat","Number","isNaN","pattern","moment","onSaveCoupon","coupon","setCode","setDiscount","setDescription","setStartDate","setEndDate","ranges","Today","endOf","Coupons","addCouponState","editCouponState","onEditCoupon","CreateCoupon","fetchCoupons","err","UpdateCoupon","DeleteCoupon","format","status","checkedChildren","unCheckedChildren","defaultChecked","checked","loadingTable","coupons","AddNationality","onAddNationality","onSaveNationality","nationality","Nationalities","addNationalityState","editNationalityState","onEditNationality","CreateNationality","fetchNationalities","UpdateNationality","DeleteNationalities","pagination","position","nationalities","Option","Select","AddLevel","handleChangeSubjects","onAddLevel","mode","filter","map","index","onSaveLevel","level","subjectsState","setSubjects","sub","Levels","addLevelState","editLevelState","onEditLevel","CreateLevel","fetchLevels","UpdateLevel","DeleteLevel","dir","levels","Settings","match","path","url","component"],"mappings":"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","file":"static/js/12.c4e0dfdb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Input, Modal } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nclass AddCity extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      name :''\n    }\n  }\n\n  render() {\n    const { onAddCity, onToggleModal, open } = this.props;\n    const { name } = this.state;\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"city.addCity\"/>}\n        toggle={onToggleModal} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"addCityState\");\n          onAddCity({ name });\n          this.setState({ name: '' })\n        }}\n        onCancel={()=> {\n          onToggleModal(\"addCityState\")\n          this.setState({ name: '' })\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({name: event.target.value})}\n                margin=\"none\"/>\n                )\n              }\n           </FormattedMessage>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddCity;\n","import React , { useState , useEffect } from \"react\";\nimport { Input, Modal } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst EditCity = ({ onSaveCity, onToggleModal, open, city }) => {\n  \n    const [name, setName] = useState('')\n\n    useEffect(() => {\n      if(Object.keys(city).length !== 0){\n        console.log(city.name)\n        setName(city.name)\n      }\n    }, [city])\n\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"city.saveCity\"/>}\n        toggle={onToggleModal} \n        visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"editCityState\");\n          onSaveCity({ id:city.id , name });\n          setName(name)\n        }}\n        onCancel={()=> {\n          onToggleModal('editCityState')\n          setName(city.name)\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n              <Input\n                required\n                placeholder={placeholder}\n                onChange={(event) => setName(event.target.value)}\n                value={name}\n                margin=\"none\"/>\n                )\n              }\n           </FormattedMessage>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n}\n\nexport default React.memo(EditCity);\n","import React from \"react\";\nimport { Button, Card, Table , Col , Row , message , Popconfirm , Divider , Input , Space} from \"antd\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"util/IntlMessages\";\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined , PlusCircleFilled , DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\nimport AddCity from \"components/city/AddCity\";\nimport EditCity from \"components/city/EditCity\";\nimport { fetchCities , CreateCity , UpdateCity , DeleteCity } from \"../../../appRedux/actions/Cities\";\nimport { FormattedMessage } from \"react-intl\";\n\n\nclass Cities extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n    city:{},\n    addCityState:false,\n    editCityState:false,\n    visible: false,\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n      <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n          {\n            placeholder => (\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`ابحث`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          )\n          }\n      </FormattedMessage>\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            ابحث\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            إلغاء\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n \n  componentDidMount(){\n    this.props.fetchCities()\n  }\n\n  onToggleModal = (modal) => {\n    this.setState(state => ({\n      [modal]:!state[modal],\n    }));\n  }\n\n  onEditCity = (data) => {\n    this.setState({city:data}, ()=>{\n      this.onToggleModal(\"editCityState\");\n    })\n  };\n\n  onAddCity = async (data) => {\n    await this.props.CreateCity({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchCities()\n  };\n\n  onSaveCity = async (data) => {\n    await this.props.UpdateCity({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchCities()\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  confirm = (ids) => {\n    this.setState({ loading: true });\n    this.props.DeleteCity({ids})\n    .then( async ()=>{\n      await this.props.fetchCities()\n      message.success('تم حذف المدينة');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    }).catch(()=>{\n      message.error('عطل أثناء العملية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    });   \n  }\n\n  handleVisibleChange = (visible) => {\n    const { selectedRowKeys  } = this.state;\n  \n    if (selectedRowKeys.length > 0) {\n      this.setState({visible}); \n    }\n  };\n  cancel = (e) => {\n    this.setState({ selectedRowKeys:[]  });\n  } \n\n  render() {\n    const {loading, selectedRowKeys , city  , visible} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    const columns = [{\n      title: <IntlMessages id=\"columns.name\"/>,\n      dataIndex: 'name',\n      align:'right',\n      ...this.getColumnSearchProps('name')\n    },{\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\n        <span>\n          <Button onClick={() => this.onEditCity(data)}  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\n        </span>\n      ),\n     align:'right'\n    }];\n    \n    return (\n      <Row>\n       <Col span={24}>\n        <Card title={<h1><IntlMessages id=\"sidebar.Cities\"/></h1>}>\n            <Button onClick={() => this.onToggleModal('addCityState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\n            <Divider type=\"vertical\" />\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\n            </Popconfirm>\n          <div className=\"gx-mb-3\">\n            <span style={{marginLeft: 8}}>\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\n            </span>\n          </div>\n          <AddCity open={this.state.addCityState} onAddCity={this.onAddCity} onToggleModal={this.onToggleModal} />\n          <EditCity open={this.state.editCityState} city={city} onSaveCity={this.onSaveCity} onToggleModal={this.onToggleModal} />\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.cities}/>\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cities: state.cities,\n  };\n}\n\nexport default connect(mapStateToProps,{ fetchCities , CreateCity , UpdateCity , DeleteCity } )(Cities)\n\n\n","import React from \"react\";\nimport { Input, Modal , Radio , Form } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\n\nconst RadioGroup = Radio.Group;\n\nconst options = [\n  {label: 'مادة دراسية', value: 'main'},\n  {label: 'أخرى', value: 'other'},\n];\n\nclass AddSubject extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      name :'',\n      type:''\n    }\n  }\n\n  render() {\n    const { onAddSubject, onToggleModal, open } = this.props;\n    const { name , type } = this.state;\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"subject.addSubject\"/>}\n        toggle={onToggleModal} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"addSubjectState\");\n          onAddSubject({ name , type });\n          this.setState({ name: '' , type:'' })\n        }}\n        onCancel={()=> {\n          onToggleModal(\"addSubjectState\")\n          this.setState({ name: '' , type:'' })\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Form.Item rules={[{ required: true }]}   label={placeholder}>\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({name: event.target.value})}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n              <Form.Item label={<IntlMessages id=\"columns.type\"/>}>\n                 <RadioGroup value={type} onChange={(e)=> {\n                   this.setState({type: e.target.value})\n                 }} options={options} />\n              </Form.Item>\n            </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddSubject;\n","import React , { useState , useEffect } from \"react\";\nimport { Input, Modal , Radio , Form } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst RadioGroup = Radio.Group;\n\nconst options = [\n  {label: 'مادة دراسية', value: 'main'},\n  {label: 'أخرى', value: 'other'},\n];\n\nconst EditSubject = ({ onSaveSubject, onToggleModal, open, subject }) => {\n  \n    const [name, setName] = useState('')\n    const [type, setType] = useState('')\n\n\n    useEffect(() => {\n      if(Object.keys(subject).length !== 0){\n        console.log(subject.name)\n        setName(subject.name)\n        setType(subject.type)\n      }\n    }, [subject])\n\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"subject.saveSubject\"/>}\n        toggle={onToggleModal} \n        visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"editSubjectState\");\n          onSaveSubject({ id:subject.id , name , type });\n          setName(name)\n          setType(type)\n        }}\n        onCancel={()=> {\n          onToggleModal('editSubjectState')\n          setName(subject.name)\n          setType(subject.type)\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Form.Item rules={[{ required: true }]}   label={placeholder}>\n                <Input\n                  required\n                  placeholder={placeholder}\n                  onChange={(event) => setName(event.target.value)}\n                  value={name}\n                  margin=\"none\"/>\n                  </Form.Item>\n                  )\n              }\n           </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n              <Form.Item label={<IntlMessages id=\"columns.type\"/>}>\n                 <RadioGroup value={type} onChange={(e)=> {\n                   console.log(e.target.value)\n                   setType(e.target.value)\n                 }} options={options} />\n              </Form.Item>\n            </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n}\n\nexport default React.memo(EditSubject);\n","import React from \"react\";\nimport {Button, Card, Table  , Row , Col , Popconfirm , message , Divider , Input , Space } from \"antd\";\nimport IntlMessages from \"util/IntlMessages\";\nimport Highlighter from 'react-highlight-words';\nimport {SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\nimport { fetchSubjects , CreateSubject , UpdateSubject , DeleteSubject } from \"../../../appRedux/actions/Subjects\";\nimport AddSubject from \"components/subject/AddSubject\";\nimport EditSubject from \"components/subject/EditSubject\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\n\nclass Subjects extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n    subject:{\n      name:''\n    },\n    addSubjectState:false,\n    editSubjectState:false,\n    visible: false,\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n       <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n          {\n            placeholder => (\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`ابحث`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          )\n          }\n       </FormattedMessage>\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            ابحث\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            إلغاء\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n \n  componentDidMount(){\n    this.props.fetchSubjects()\n  }\n\n  onToggleModal = (modal) => {\n    this.setState(state => ({\n      [modal]:!state[modal],\n    }));\n  }\n\n  onEditSubject = (data) => {\n    this.setState({subject:data}, ()=>{\n      this.onToggleModal(\"editSubjectState\");\n    })\n  };\n\n  onAddSubject = async (data) => {\n    await this.props.CreateSubject({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchSubjects()\n  };\n\n  onSaveSubject = async (data) => {\n    await this.props.UpdateSubject({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchSubjects()\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  confirm = (ids) => {\n    this.setState({ loading: true });\n    this.props.DeleteSubject({ids})\n    .then( async ()=>{\n      await this.props.fetchSubjects()\n      message.success('تم حذف المادة');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    }).catch(()=>{\n      message.error('عطل أثناء العملية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    });   \n  }\n\n  cancel = (e) => {\n    this.setState({ selectedRowKeys:[]  });\n  } \n\n  handleVisibleChange = (visible) => {\n    const { selectedRowKeys  } = this.state;\n  \n    if (selectedRowKeys.length > 0) {\n      this.setState({visible}); \n    }\n  };\n\n  render() {\n    const {loading, selectedRowKeys , visible , subject} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n\n    const columns = [{\n      title: <IntlMessages id=\"columns.name\"/>,\n      dataIndex: 'name',\n      align:'right',\n      ...this.getColumnSearchProps('name')\n    },{\n      title: <IntlMessages id=\"columns.type\"/>,  dataIndex: '', key: 'x', render: ({type}) => (\n        <span>\n          {type ? type === 'main' ? 'مادة دراسية' : type === 'other' ?  'أخرى'  : 'غير وارد' : 'غير وارد'}\n        </span>\n      ),\n     align:'right'\n    },{\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\n        <span>\n          <Button size=\"middle\" onClick={() => this.onEditSubject(data)} type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\n        </span>\n      ),\n     align:'right'\n    }];\n\n    \n    return (\n      <Row>\n       <Col span={24}>\n        <Card title={<h1><IntlMessages id=\"sidebar.Materials\"/></h1>}>\n            <Button  onClick={() => this.onToggleModal('addSubjectState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\n            <Divider type=\"vertical\" />\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\n              <Button size=\"large\"  icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\n            </Popconfirm>\n          <div className=\"gx-mb-3\">\n            <span style={{marginLeft: 8}}>\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\n            </span>\n          </div>\n          <AddSubject open={this.state.addSubjectState} onAddSubject={this.onAddSubject} onToggleModal={this.onToggleModal} />\n          <EditSubject open={this.state.editSubjectState} subject={subject} onSaveSubject={this.onSaveSubject} onToggleModal={this.onToggleModal} />\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} direction=\"rtl\"  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.subjects}/>\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subjects,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchSubjects , CreateSubject , UpdateSubject , DeleteSubject })(Subjects)\n","import React from \"react\";\nimport { Input, Modal , DatePicker , Form, message } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\nimport moment from \"moment\";\n\nconst {TextArea} = Input;\nconst RangePicker = DatePicker.RangePicker;\n\nclass AddCoupon extends React.Component {\n\n  state = {\n    name :'',\n    code:'',\n    discount:'',\n    description:'',\n    start:'',\n    end:''\n  }\n\n  onChange = (dates, dateStrings) => {\n    this.setState({ start:  dateStrings[0] , end:  dateStrings[1] })\n    console.log(dates);\n  }\n\n  render() {\n    const { onAddCoupon, onToggleModal, open } = this.props;\n    const { name , code , discount , start , end , description } = this.state;\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"coupon.addCoupon\"/>}\n        toggle={onToggleModal} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '' || code === '' || discount === '' || start === '' || end === '' || description === ''){\n            message.error('المرجو إدخال جميع المعلومات')\n            return;\n          }\n          if(typeof parseFloat(discount) !== \"number\" || Number.isNaN(parseFloat(discount)) || parseFloat(discount) === null ){\n            console.log(parseFloat(discount) , typeof parseFloat(discount))\n            message.error('المرجو إدخال نسبة التخفيض')\n            return;\n          }\n          onAddCoupon({ name , code , discount:parseFloat(discount) , start , end , description });\n          this.setState({ name: '' , code: '' , discount: '' , start: '', end: '', description:'' })\n        }}\n        onCancel={()=> {\n          onToggleModal(\"addCouponState\")\n          this.setState({ name: '' , code: '' , discount: '' , start: '', end: '', description:'' })\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.name\"/>}>\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({name: event.target.value})}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.code\" defaultMessage=\"code\">\n             {\n               placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.code\"/>}>\n                <Input\n                required\n                value={code}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({code: event.target.value})}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.discount\" defaultMessage=\"discount\">\n             {\n               placeholder => (\n                <Form.Item rules={[{ required: true, pattern:/^\\d*\\.?\\d*$/ , message: 'المرجو إدخال إسم المستخدم' }]} label={<IntlMessages id=\"columns.discount\"/>}>\n                  <Input\n                  required\n                  value={discount}\n                  placeholder={placeholder}\n                  onChange={(event) => this.setState({discount: event.target.value})}\n                  margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n              <FormattedMessage id=\"columns.description\" defaultMessage=\"description\">\n              {\n                placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.description\"/>}>\n                  <TextArea\n                  required\n                  value={description}\n                  placeholder={placeholder}\n                  onChange={(event) => this.setState({description: event.target.value})}\n                  margin=\"none\"/>\n                </Form.Item>\n                  )\n                }\n            </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.periode\" defaultMessage=\"periode\">\n             {\n               placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.periode\"/>}>\n                  <RangePicker value={[start !== \"\" ? moment(start) : null,end !== \"\" ? moment(end) : null]} placeholder={placeholder}  className=\"gx-mb-3 gx-w-100\"  onChange={this.onChange} />\n                </Form.Item>\n               )\n              }\n           </FormattedMessage>\n            </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddCoupon;\n","import React , { useState , useEffect } from \"react\";\nimport { Input, Modal , DatePicker , Form , message } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\nimport moment from \"moment\";\n\nconst RangePicker = DatePicker.RangePicker;\nconst {TextArea} = Input;\n\n\nconst EditCoupon = ({ onSaveCoupon, onToggleModal, open, coupon }) => {\n  \n    const [name, setName] = useState('')\n    const [code, setCode] = useState('')\n    const [discount, setDiscount] = useState('')\n    const [description, setDescription] = useState('')\n    const [start, setStartDate] = useState('')\n    const [end, setEndDate] = useState('')\n\n    useEffect(() => {\n      if(Object.keys(coupon).length !== 0){\n        setName(coupon.name)\n        setCode(coupon.code)\n        setDiscount(coupon.discount)\n        setDescription(coupon.description)\n        setStartDate(coupon.start)\n        setEndDate(coupon.end)\n      }\n    }, [coupon])\n\n    const onChange = (dates, dateStrings) => {\n      setStartDate(dateStrings[0])\n      setEndDate(dateStrings[1])\n      console.log(dates);\n    }\n\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"coupon.saveCoupon\"/>}\n        toggle={onToggleModal} \n        visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '' || code === '' || discount === '' || start === '' || end === '' || description === ''){\n            message.error('المرجو إدخال جميع المعلومات')\n            return;\n          }\n          if(typeof parseFloat(discount) !== \"number\" || Number.isNaN(parseFloat(discount)) || parseFloat(discount) === null ){\n            console.log(parseFloat(discount) , typeof parseFloat(discount))\n            message.error('المرجو إدخال نسبة التخفيض')\n            return;\n          }\n          onToggleModal(\"editCouponState\");\n          onSaveCoupon({ id:coupon.id , name , code ,  discount:parseFloat(discount)  , description , start , end });\n          setName(name)\n          setName(name)\n          setCode(code)\n          setDiscount(discount)\n          setDescription(description)\n          setStartDate(start)\n          setEndDate(end)\n        }}\n        onCancel={()=> {\n          onToggleModal('editCouponState')\n          setName(coupon.name)\n          setCode(coupon.code)\n          setDiscount(coupon.discount)\n          setDescription(coupon.description)\n          setStartDate(coupon.start)\n          setEndDate(coupon.end)\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\n          <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.name\"/>}>\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => setName(event.target.value)}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.code\" defaultMessage=\"code\">\n             {\n               placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.code\"/>}>\n                <Input\n                required\n                value={code}\n                placeholder={placeholder}\n                onChange={(event) => setCode(event.target.value)}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.discount\" defaultMessage=\"discount\">\n             {\n               placeholder => (\n                <Form.Item rules={[{ required: true, pattern:/^\\d*\\.?\\d*$/ , message: 'المرجو إدخال إسم المستخدم' }]} label={<IntlMessages id=\"columns.discount\"/>}>\n                <Input\n                required\n                value={discount}\n                placeholder={placeholder}\n                onChange={(event) => setDiscount(event.target.value)}\n                margin=\"none\"/>\n                </Form.Item>\n                )\n              }\n           </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n              <FormattedMessage id=\"columns.description\" defaultMessage=\"description\">\n              {\n                placeholder => (\n                <Form.Item  label={<IntlMessages id=\"columns.description\"/>}>\n                  <TextArea\n                  required\n                  value={description}\n                  placeholder={placeholder}\n                  onChange={(event) =>   setDescription(event.target.value)}\n                  margin=\"none\"/>\n                </Form.Item>\n                  )\n                }\n            </FormattedMessage>\n            </div>\n\n            <div className=\"gx-form-group\">\n              <Form.Item  label={<IntlMessages id=\"columns.discount\"/>}>\n              <RangePicker value={[moment(start),moment(end)]} className=\"gx-mb-3 gx-w-100\" ranges={{Today: [moment(), moment()], 'This Month': [moment(), moment().endOf('month')]}} onChange={onChange} />\n              </Form.Item>\n            </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n}\n\nexport default React.memo(EditCoupon);\n","import React from \"react\";\nimport { Button, Card, Table , Row , Col , Divider , Popconfirm , message , Switch , Space , Input } from \"antd\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { SearchOutlined  , PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\nimport AddCoupon from \"components/coupon/AddCoupon\";\nimport EditCoupon from \"components/coupon/EditCoupon\";\nimport IntlMessages from \"util/IntlMessages\";\nimport Highlighter from 'react-highlight-words';\nimport { fetchCoupons , CreateCoupon , UpdateCoupon , DeleteCoupon } from \"../../../appRedux/actions/Coupons\";\nimport { FormattedMessage } from \"react-intl\";\n\nclass Coupons extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n    coupon:{\n      name:''\n    },\n    addCouponState:false,\n    editCouponState:false,\n    visible: false,\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n          {\n            placeholder => (\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`ابحث`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          )\n          }\n       </FormattedMessage>\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            ابحث\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            إلغاء\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  componentDidMount(){\n    this.props.fetchCoupons()\n  }\n\n  onToggleModal = (modal) => {\n    this.setState(state => ({\n      [modal]:!state[modal],\n    }));\n  }\n\n  onEditCoupon = (data) => {\n    this.setState({coupon:data}, ()=>{\n      this.onToggleModal(\"editCouponState\");\n    })\n  };\n\n  onAddCoupon = (data) => {\n    this.props.CreateCoupon({data}).then(async()=>{\n      message.success('تمت العملية بنجاح')\n      await this.props.fetchCoupons()\n      this.onToggleModal(\"addCouponState\");\n    })\n    .catch((err)=> {\n      if(err.data.error === 'Duplicate Code'){\n        message.error('الرمز الذي تم إدخاله مكرر')\n      }else{\n        message.error('عطل أثناء الإضافة!')\n      }\n    })\n  };\n\n  onSaveCoupon = async (data) => {\n    await this.props.UpdateCoupon({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchCoupons()\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  confirm = (ids) => {\n    this.setState({ loading: true });\n    this.props.DeleteCoupon({ids})\n    .then( async ()=>{\n      await this.props.fetchCoupons()\n      message.success('تم حذف الكوبون');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    }).catch(()=>{\n      message.error('عطل أثناء العملية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    });   \n  }\n\n  cancel = (e) => {\n    this.setState({ selectedRowKeys:[]  });\n  } \n  \n  handleVisibleChange = (visible) => {\n    const { selectedRowKeys  } = this.state;\n  \n    if (selectedRowKeys.length > 0) {\n      this.setState({visible}); \n    }\n  };\n\n  render() {\n    const { loading , selectedRowKeys , visible , coupon } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    const columns = [{\n      title: <IntlMessages id=\"columns.name\"/>,\n      dataIndex: 'name',\n      align:'right',\n      ...this.getColumnSearchProps('name')\n    }, {\n      title: <IntlMessages id=\"columns.code\"/>,\n      dataIndex: 'code',\n      align:'right',\n      ...this.getColumnSearchProps('code')\n    }, {\n      title: <IntlMessages id=\"columns.discount\"/>,\n      dataIndex: 'discount',\n      align:'right'\n    },{\n      title: <IntlMessages id=\"columns.start\"/>,\n      dataIndex:'start',\n      key: 'start',\n      render: (start) => moment(start).format('DD-MM-YYYY'),\n      align:'right'\n    }, {\n      title: <IntlMessages id=\"columns.end\"/>,\n      dataIndex: 'end',\n      key: 'end' ,\n      render: (end) => moment(end).format('DD-MM-YYYY'),\n      align:'right'\n    },{\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({ id , status , name , discount , start , end , description , code }) => (\n         <Switch  checkedChildren=\"نشط\" unCheckedChildren=\"غير نشط\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\n          let status = checked ? \"active\" : \"inactive\"\n          this.setState({loadingTable:true}); \n          this.props.UpdateCoupon({data:{status , id , name , discount , start , end , description , code }})\n          .then(async()=> {\n            this.props.fetchCoupons().then(()=>{\n              message.success('تم التفعيل بنجاح')\n              this.setState({loadingTable:false}); \n            })\n          })\n          .catch((err)=> {\n            message.error('عطل أثناء التعديل')\n            this.setState({loadingTable:false}); \n          }, 2000);\n         } } />\n      ) , align :'right' , width :\"500\"\n    },{\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\n        <span>\n          <Button onClick={() => this.onEditCoupon(data)}   type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\n        </span>\n      ),\n     align:'right'\n    }];\n\n    \n    return (\n      <Row>\n       <Col span={24}>\n        <Card title={<h1><IntlMessages id=\"sidebar.Coupons\"/></h1>}>\n            <Button  onClick={() => this.onToggleModal('addCouponState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\n            <Divider type=\"vertical\" />\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\n            </Popconfirm>\n          <div className=\"gx-mb-3\">\n            <span style={{marginLeft: 8}}>\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\n            </span>\n          </div>\n          <AddCoupon open={this.state.addCouponState} onAddCoupon={this.onAddCoupon} onToggleModal={this.onToggleModal} />\n          <EditCoupon open={this.state.editCouponState} coupon={coupon} onSaveCoupon={this.onSaveCoupon} onToggleModal={this.onToggleModal} />\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} direction=\"rtl\"  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.coupons}/>\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    coupons: state.coupons,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchCoupons , CreateCoupon , UpdateCoupon , DeleteCoupon })(Coupons)\n","import React from \"react\";\nimport { Input, Modal } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nclass AddNationality extends React.Component {\n\n  state = {\n    name :''\n  }\n\n  render() {\n    const { onAddNationality, onToggleModal, open } = this.props;\n    const { name } = this.state;\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"nationality.addNationality\"/>}\n        toggle={onToggleModal} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"addNationalityState\");\n          onAddNationality({ name });\n          this.setState({ name: '' })\n        }}\n        onCancel={()=> {\n          onToggleModal(\"addNationalityState\")\n          this.setState({ name: '' })\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({name: event.target.value})}\n                margin=\"none\"/>\n                )\n              }\n           </FormattedMessage>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddNationality;\n","import React , { useState , useEffect } from \"react\";\nimport { Input, Modal } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst EditNationality = ({ onSaveNationality , onToggleModal, open, nationality }) => {\n  \n    const [name, setName] = useState('')\n\n    useEffect(() => {\n      if(Object.keys(nationality).length !== 0){\n        console.log(nationality.name)\n        setName(nationality.name)\n      }\n    }, [nationality])\n\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"nationality.saveNationality\"/>}\n        toggle={onToggleModal} \n        visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"editNationalityState\");\n          onSaveNationality({ id:nationality.id , name });\n          setName(name)\n        }}\n        onCancel={()=> {\n          onToggleModal('editNationalityState')\n          setName(nationality.name)\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n              <Input\n                required\n                placeholder={placeholder}\n                onChange={(event) => setName(event.target.value)}\n                value={name}\n                margin=\"none\"/>\n                )\n              }\n           </FormattedMessage>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n}\n\nexport default React.memo(EditNationality);\n","import React from \"react\";\nimport {Button, Card, Table  , Row , Col , message , Divider , Popconfirm , Input , Space} from \"antd\";\nimport IntlMessages from \"util/IntlMessages\";\nimport Highlighter from 'react-highlight-words';\nimport AddNationality from \"components/nationality/AddNationality\";\nimport EditNationality from \"components/nationality/EditNationality\";\nimport {SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\nimport { fetchNationalities , CreateNationality , UpdateNationality , DeleteNationalities } from \"../../../appRedux/actions/Nationalities\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\n\n\nclass Nationalities extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n    nationality:{\n      name:''\n    },\n    addNationalityState:false,\n    editNationalityState:false,\n    visible: false,\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n         <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n          {\n            placeholder => (\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`ابحث`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          )\n          }\n       </FormattedMessage>\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            ابحث\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            إلغاء\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  \n  componentDidMount(){\n    this.props.fetchNationalities()\n  }\n\n  onToggleModal = (modal) => {\n    this.setState(state => ({\n      [modal]:!state[modal],\n    }));\n  }\n\n  onEditNationality = (data) => {\n    this.setState({nationality:data}, ()=>{\n      this.onToggleModal(\"editNationalityState\");\n    })\n  };\n\n  onAddNationality = async (data) => {\n    await this.props.CreateNationality({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchNationalities()\n  };\n\n  onSaveNationality = async (data) => {\n    await this.props.UpdateNationality({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchNationalities()\n  };\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n  confirm = (ids) => {\n    this.setState({ loading: true });\n    this.props.DeleteNationalities({ids})\n    .then( async ()=>{\n      await this.props.fetchNationalities()\n      message.success('تم حذف الجنسية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    }).catch(()=>{\n      message.error('عطل أثناء العملية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    });   \n  }\n\n  cancel = (e) => {\n    this.setState({ selectedRowKeys:[]  });\n  } \n  \n  handleVisibleChange = (visible) => {\n    const { selectedRowKeys  } = this.state;\n  \n    if (selectedRowKeys.length > 0) {\n      this.setState({visible}); \n    }\n  };\n\n  render() {\n    const {loading, selectedRowKeys , visible , nationality} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    const columns = [{\n      title: <IntlMessages id=\"columns.name\"/>,\n      dataIndex: 'name',\n      align:'right',\n      ...this.getColumnSearchProps('name')\n    },{\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\n        <span>\n          <Button onClick={() => this.onEditNationality(data)}  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\n        </span>\n      ),\n     align:'right'\n    }];\n\n    return (\n      <Row>\n       <Col span={24}>\n        <Card title={<h1><IntlMessages id=\"sidebar.Nationalities\"/></h1>}>\n            <Button onClick={() => this.onToggleModal('addNationalityState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\n            <Divider type=\"vertical\" />\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\n            </Popconfirm>\n          <div className=\"gx-mb-3\">\n            <span style={{marginLeft: 8}}>\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\n            </span>\n          </div>\n          <AddNationality open={this.state.addNationalityState} onAddNationality={this.onAddNationality} onToggleModal={this.onToggleModal} />\n          <EditNationality open={this.state.editNationalityState} nationality={nationality} onSaveNationality={this.onSaveNationality} onToggleModal={this.onToggleModal} />\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id}  pagination={{position:'bottom center'}}  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.nationalities}/>\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nationalities: state.nationalities,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchNationalities , CreateNationality , UpdateNationality , DeleteNationalities })(Nationalities)\n","import React from \"react\";\nimport { Input, Modal , Select } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst Option = Select.Option;\n\nclass AddLevel extends React.Component {\n  \n  state = {\n    name :'',\n    subjects:[]\n  }\n\n\n  handleChangeSubjects = (subjects) => {\n    this.setState({subjects})\n  }\n\n  render() {\n    const { onAddLevel, onToggleModal, open } = this.props;\n    const { name , subjects } = this.state;\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"level.addLevel\"/>}\n        toggle={onToggleModal} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"addLevelState\");\n          onAddLevel({ name , subjects});\n          this.setState({ name: '' , subjects:[] })\n        }}\n        onCancel={()=> {\n          onToggleModal(\"addLevelState\")\n          this.setState({ name: '' , subjects:[] })\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n            <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n                <Input\n                required\n                value={name}\n                placeholder={placeholder}\n                onChange={(event) => this.setState({name: event.target.value})}\n                margin=\"none\"/>\n                )\n              }\n           </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n                 <Select\n                  mode=\"multiple\"\n                  value={subjects}\n                  style={{width: '100%'}}\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\n                  onChange={this.handleChangeSubjects}>\n                  {this.props.subjects.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\n                </Select>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddLevel\n\n","import React , { useState , useEffect } from \"react\";\nimport { Input, Modal , Select } from \"antd\";\nimport { SaveFilled } from \"@ant-design/icons\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { FormattedMessage } from \"react-intl\";\n\n\nconst Option = Select.Option;\n\n\nconst EditLevel = ({ onSaveLevel, onToggleModal, open, level , subjects }) => {\n  \n    const [name, setName] = useState('')\n    const [subjectsState, setSubjects] = useState([])\n\n    const  handleChangeSubjects = (subjects) => {\n      setSubjects(subjects)\n     }\n\n    useEffect(() => {\n      if(Object.keys(level).length !== 0){\n        console.log(level.name)\n        setName(level.name)\n        let subjects = level.subjects.map((sub)=> sub.id)\n        setSubjects(subjects)\n      }\n    }, [level])\n\n    return (\n      <Modal\n        okText={<SaveFilled />}\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\n        title={<IntlMessages id=\"level.saveLevel\"/>}\n        toggle={onToggleModal} \n        visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onToggleModal(\"editLevelState\");\n          onSaveLevel({ id:level.id , name , subjects:subjectsState });\n          setName(name)\n          setName(subjectsState)\n        }}\n        onCancel={()=> {\n          onToggleModal('editLevelState')\n          setName(level.name)\n          let subjects = level.subjects.map((sub)=> sub.id)\n          setSubjects(subjects)\n        }}>\n\n        <div  className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n             <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n             {\n               placeholder => (\n              <Input\n                required\n                placeholder={placeholder}\n                onChange={(event) => setName(event.target.value)}\n                value={name}\n                margin=\"none\"/>\n                )\n              }\n             </FormattedMessage>\n            </div>\n            <div className=\"gx-form-group\">\n                 <Select\n                  mode=\"multiple\"\n                  value={subjectsState}\n                  style={{width: '100%'}}\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\n                  onChange={handleChangeSubjects}>\n                  {subjects.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\n                </Select>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n}\n\nexport default React.memo(EditLevel);\n","import React from \"react\";\nimport { Button, Card, Table , Col , Row , Popconfirm , message , Divider , Space , Input } from \"antd\";\nimport IntlMessages from \"util/IntlMessages\";\nimport Highlighter from 'react-highlight-words';\nimport {SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\nimport AddLevel from \"components/level/AddLevel\";\nimport EditLevel from \"components/level/EditLevel\";\nimport { connect } from \"react-redux\";\nimport { fetchLevels , CreateLevel , UpdateLevel , DeleteLevel } from \"../../../appRedux/actions/Levels\";\nimport { fetchSubjects } from \"../../../appRedux/actions/Subjects\";\n\nimport { FormattedMessage } from \"react-intl\";\n\n\nclass Levels extends React.Component {\n\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n    level:{\n      name:'',\n      subjects:[]\n    },\n    addLevelState:false,\n    editLevelState:false,\n    visible: false,\n    searchText: '',\n    searchedColumn: ''\n  };\n\n\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\n          {\n            placeholder => (\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`ابحث`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          )\n          }\n       </FormattedMessage>\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            ابحث\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            إلغاء\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  \n  componentDidMount(){\n    this.props.fetchLevels().then(async()=>{\n       await this.props.fetchSubjects()\n    })\n  }\n\n  onToggleModal = (modal) => {\n    this.setState(state => ({\n      [modal]:!state[modal],\n    }));\n  }\n\n  onEditLevel = (data) => {\n    this.setState({level:data}, ()=>{\n      this.onToggleModal(\"editLevelState\");\n    })\n  };\n\n  onAddLevel = async (data) => {\n    await this.props.CreateLevel({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchLevels()\n  };\n\n  onSaveLevel = async (data) => {\n    await this.props.UpdateLevel({data})\n    message.success('تمت العملية بنجاح')\n    await this.props.fetchLevels()\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  cancel = (e) => {\n    this.setState({ selectedRowKeys:[]  });\n  } \n\n  confirm = (ids) => {\n    this.setState({ loading: true });\n    this.props.DeleteLevel({ids})\n    .then( async ()=>{\n      await this.props.fetchLevels()\n      message.success('تم حذف المستوى');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    }).catch(()=>{\n      message.error('عطل أثناء العملية');\n      this.setState({ loading: false , selectedRowKeys:[]});\n    });   \n  }\n\n  handleVisibleChange = (visible) => {\n    const { selectedRowKeys  } = this.state;\n  \n    if (selectedRowKeys.length > 0) {\n      this.setState({visible}); \n    }\n  };\n\n  render() {\n\n    const columns = [{\n      title: <IntlMessages id=\"columns.name\"/>,\n      dataIndex: 'name',\n      align:'right',\n      ...this.getColumnSearchProps('name')\n    },{\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\n        <span>\n          <Button onClick={() => this.onEditLevel(data)}  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\n        </span>\n      ),\n     align:'right'\n    }];\n    \n    const { loading, selectedRowKeys , level, visible } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <Row>\n       <Col span={24}>\n        <Card title={<h1><IntlMessages id=\"sidebar.Levels\"/></h1>}>\n            <Button  onClick={() => this.onToggleModal('addLevelState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\n            <Divider type=\"vertical\" />\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\n            </Popconfirm>\n          <div className=\"gx-mb-3\">\n            <span style={{marginLeft: 8}}>\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\n            </span>\n          </div>\n          <AddLevel open={this.state.addLevelState} onAddLevel={this.onAddLevel} subjects={this.props.subjects} onToggleModal={this.onToggleModal} />\n          <EditLevel open={this.state.editLevelState} level={level} onSaveLevel={this.onSaveLevel} subjects={this.props.subjects}  onToggleModal={this.onToggleModal} />\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} dir=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.levels}/>\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    levels: state.levels,\n    subjects: state.subjects,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchLevels , CreateLevel , UpdateLevel , DeleteLevel , fetchSubjects })(Levels)\n\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport Cities from \"./Cities\";\nimport Subjects from \"./Subjects\";\nimport Coupons from \"./Coupons\";\nimport Nationalities from \"./Nationalities\";\nimport Levels from \"./Levels\";\n\n\nconst Settings = ({match}) => (\n  <Switch>\n    <Route path={`${match.url}/cities`} component={Cities}/>\n    <Route path={`${match.url}/levels`} component={Levels}/>\n    <Route path={`${match.url}/subjects`} component={Subjects}/>\n    <Route path={`${match.url}/coupons`} component={Coupons}/>\n    <Route path={`${match.url}/nationalities`} component={Nationalities}/>\n  </Switch>\n);\n\nexport default Settings;\n"],"sourceRoot":""}