{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","routes/requests/index.js"],"names":["EditOutlined","props","ref","React","AntdIcon","Object","assign","icon","EditOutlinedSvg","displayName","columns","title","id","dataIndex","align","key","render","type","data","Requests","state","selectedRowKeys","loading","onSelectChange","console","log","setState","this","rowSelection","onChange","hasSelected","length","span","size","disabled","className","style","marginLeft","locale","emptyText","dir","bordered","dataSource","Component"],"mappings":"yHAEeA,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uZAA2Z,KAAQ,OAAQ,MAAS,Y,QCK1kBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,MAIVR,EAAaS,YAAc,eACZN,iBAAiBH,I,qKCT1BU,EAAU,CAAC,CACfC,MAAO,kBAAC,IAAD,CAAcC,GAAG,iBACxBC,UAAW,OACXC,MAAM,SACN,CACAH,MAAO,kBAAC,IAAD,CAAcC,GAAG,sBAAuBC,UAAW,GAAIE,IAAK,IAAKC,OAAQ,cAAEJ,GAAF,OAC9E,8BACE,kBAAC,IAAD,CAASK,KAAK,UAAUV,KAAM,kBAAC,IAAD,OAA9B,sCAGLO,MAAM,UAGDI,EAAO,GAEPC,E,4MACJC,MAAQ,CACNC,gBAAiB,GACjBC,SAAS,G,EAGXC,eAAiB,SAACF,GAChBG,QAAQC,IAAI,4BAA6BJ,GACzC,EAAKK,SAAS,CAAEL,qB,uDAGR,IAAD,EAC4BM,KAAKP,MAAjCE,EADA,EACAA,QAASD,EADT,EACSA,gBACVO,EAAe,CACnBP,kBACAQ,SAAUF,KAAKJ,gBAEXO,EAAcT,EAAgBU,OAAS,EAC7C,OACE,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,KAAM,IACV,kBAAC,IAAD,CAAMrB,MAAO,4BAAI,kBAAC,IAAD,CAAcC,GAAG,uBAC9B,kBAAC,IAAD,CAASqB,KAAK,QAAQ1B,KAAM,kBAAC,IAAD,MAAmB2B,UAAWJ,EAAab,KAAK,SAASK,QAASA,IAChG,yBAAKa,UAAU,WACb,0BAAMC,MAAO,CAACC,WAAY,IACvBP,EAAW,sDAAeT,EAAgBU,OAA/B,mCAAgD,KAGhE,kBAAC,IAAD,CAAOO,OAAQ,CAACC,UAAU,2FAAsBC,IAAI,MAAMC,UAAU,EAAMN,UAAU,sBAAsBP,aAAcA,EAAclB,QAASA,EAASgC,WAAYxB,W,GA5BvJf,IAAMwC,WAqCdxB","file":"static/js/9.9c40a2e6.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default React.forwardRef(EditOutlined);","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row  } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { DeleteOutlined , EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst columns = [{\r\n  title: <IntlMessages id=\"columns.name\"/>,\r\n  dataIndex: 'name',\r\n  align:'right'\r\n},{\r\n  title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: ({id}) => (\r\n    <span>\r\n      <Button  type=\"primary\" icon={<EditOutlined />} > تعديل </Button>\r\n    </span>\r\n  ),\r\n align:'right'\r\n}];\r\n\r\nconst data = [];\r\n\r\nclass Requests extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n \r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Requests\"/></h1>}>\r\n            <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} dir=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Requests;\r\n"],"sourceRoot":""}