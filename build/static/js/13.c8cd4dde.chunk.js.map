{"version":3,"sources":["components/teacher/AddTeacher/index.js","components/teacher/EditTeacher/index.js","components/teacher/ShowTeacher/index.js","routes/users/Teachers/index.js","components/student/AddStudent/index.js","components/student/EditStudent/index.js","routes/users/Students/index.js","components/users/AddUser/index.js","components/users/EditUser/index.js","routes/users/Members/index.js","routes/users/index.js"],"names":["Option","Select","TextArea","Input","RadioGroup","Radio","Group","children","i","push","key","toString","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","options","label","value","AddTeacher","state","name","mobile","gender","password","city","nationality","qualification","bankiban","bankname","image","certificate","personalcard","levels","subjects","subjectsState","other_subjects","fileList","previewVisible","previewImage","previewTitle","loading","disabled","handleChangeLevels","ids","a","setState","props","fetchManyLevel","concat","map","level","length","distinctedSubjects","Map","item","has","id","set","type","filteredSujects","filter","subj","includes","originalSubjects","sub","Array","from","Set","handleChangeSubjects","handleChangeOtherSubjects","imageFile","e","console","log","isArray","certificateFile","personalcardFile","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","this","onAddTeacher","onToggleModal","open","beforeUpload","width","okText","SaveFilled","cancelText","IntlMessages","title","toggle","visible","closable","onOk","message","onCancel","className","dir","labelCol","span","wrapperCol","defaultMessage","placeholder","Item","rules","required","onChange","event","target","margin","nationalities","index","mode","style","subject","cities","valuePropName","getValueFromEvent","onPreview","listType","icon","UploadOutlined","rows","footer","alt","src","React","Component","connect","memo","onSaveTeacher","teacher","useSelector","levelsState","dispatch","useDispatch","useState","setName","setMobile","setBankName","setBankIban","setNationality","setPassword","subjectsData","setSubjects","setSubjectState","setOther","setLevels","setCity","setQualification","setGender","setImage","setLoading","setDisabled","setCertificate","setPersonalCard","setFileList","setPreviewVisible","setPreviewImage","setPreviewTitle","useEffect","Object","keys","lev","then","personalCard","xl","lg","md","sm","xs","marginTop","color","cover","Teachers","selectedRowKeys","loadingTable","addTeacherState","editTeacherState","showTeacherState","searchText","searchedColumn","getColumnSearchProps","dataIndex","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","onPressEnter","marginBottom","display","onClick","SearchOutlined","size","filterIcon","filtered","undefined","onFilter","record","toLowerCase","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","modal","onEditTeacher","onShowTeacher","data","formData","FormData","arr","append","CreateTeacher","success","fetchTeachers","UpdateTeacher","onSelectChange","DeleteTeachers","catch","handleVisibleChange","cancel","fetchCities","fetchLevels","fetchSubjects","fetchNationalities","rowSelection","hasSelected","columns","align","status","CheckCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","checkedChildren","unCheckedChildren","defaultChecked","checked","UpdateTeacherStatus","err","EditOutlined","EyeFilled","PlusCircleFilled","onVisibleChange","placement","onConfirm","DeleteOutlined","marginLeft","locale","emptyText","rowKey","bordered","dataSource","teachers","AddStudent","onAddStudent","onSaveStudent","student","Students","addStudentState","editStudentState","onEditStudent","CreateStudent","fetchStudents","UpdateStudent","DeleteStudents","students","AddUser","username","role","onAddUser","pattern","onSaveUser","user","setUserName","setRole","Members","addUserState","editUserState","onEditUser","CreateUser","token","auth","decoded","jwtDecode","fetchUsers","userId","UpdateUser","direction","users","DeleteUsers","Users","match","path","component"],"mappings":"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","file":"static/js/13.c8cd4dde.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Input, Modal , Select , Form  , Radio  , Upload , Button, message } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\nclass AddTeacher extends React.Component {\r\n\r\n  state = {\r\n    name:'',\r\n    mobile:'',\r\n    gender:'',\r\n    password:'',\r\n    city:'',\r\n    nationality:'',\r\n    qualification:'',\r\n    bankiban:'',\r\n    bankname:'',\r\n    image:null,\r\n    certificate:null,\r\n    personalcard:null,\r\n    levels:[],\r\n    subjects:[],\r\n    subjectsState:[],\r\n    other_subjects : [],\r\n    fileList:[],\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    loading:false,\r\n    disabled:true\r\n  }\r\n\r\n  handleChangeLevels = async (ids) => {\r\n    this.setState({levels : ids , loading:true})\r\n    const levels = await this.props.fetchManyLevel({ids})\r\n    let subjects = []\r\n    subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n    if(subjects.length === 0){\r\n      this.setState({disabled : true ,  subjectsState:[] , loading:false})\r\n    }else{\r\n      const distinctedSubjects = [];\r\n      const map = new Map();\r\n      for (const item of subjects) {\r\n          if(!map.has(item.id)){\r\n              map.set(item.id, true);    // set any value to Map\r\n              distinctedSubjects.push({\r\n                  id: item.id,\r\n                  name: item.name,\r\n                  type: item.type\r\n              });\r\n          }\r\n      }\r\n      let filteredSujects = subjects.filter((subj) => this.state.subjectsState.includes(subj.id))\r\n      let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n      this.setState({loading:false , subjects:distinctedSubjects , subjectsState:Array.from(new Set(originalSubjects)) , disabled:false})\r\n    }\r\n  }\r\n\r\n  handleChangeSubjects = (subjects) => {\r\n    this.setState({subjectsState:subjects})\r\n  }\r\n\r\n  handleChangeOtherSubjects = (other_subjects) => {\r\n    this.setState({other_subjects})\r\n  }\r\n\r\n  imageFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({image: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  certificateFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({certificate: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  personalcardFile = e => {\r\n    console.log('Upload event:', e.file);\r\n    this.setState({personalcard: e.file})\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n  \r\n    return e && e.fileList;\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { onAddTeacher, onToggleModal, open } = this.props;\r\n    const { subjectsState ,  name , password , mobile, fileList , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects , previewImage , previewTitle , previewVisible , other_subjects , loading , disabled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 },\r\n    };\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n    return (\r\n      <Modal\r\n        width={'50%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.addTeacher\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' ||  password === '' || mobile === '' || gender === '' || bankiban === '' || bankname === '' || image === null || personalcard === null || certificate === null || nationality === '' || city === '' || qualification === '' || levels.length === 0 || subjects.length === 0){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n            return null\r\n          }else{\r\n              onToggleModal(\"addTeacherState\");\r\n              onAddTeacher({  name , password , mobile , gender , bankiban , bankname , image , personalcard , certificate , nationality , city , qualification , levels , subjects:subjectsState , other_subjects });\r\n              this.setState({ loading:false, disabled:true, name: '' , fileList:[] ,  password:'' , mobile : '' , gender:'' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addTeacherState\")\r\n          this.setState({loading:false, disabled:true, name: '' , fileList:[] , password:'' , gender:'' , mobile : '' , bankiban:'' ,bankname:'' ,image:null, personalcard:null, certificate:null ,nationality:'', city:'' ,qualification:'', levels: [] , subjects : [] , subjectsState:[] , other_subjects : [] })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form  dir=\"rtl\" {...formItemLayout}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({mobile: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankname: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({bankiban: event.target.value})}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      value={password}\r\n                      placeholder={placeholder}\r\n                      onChange={(event) => this.setState({password: event.target.value})}\r\n                      margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select value={nationality} placeholder={<IntlMessages id=\"columns.nationality\"/>} onChange={(value) => this.setState({nationality: value})} className=\"gx-mb-3\"   >\r\n                {this.props.nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={this.handleChangeLevels}>\r\n                    {this.props.levels.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsState}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={this.handleChangeSubjects}>\r\n                  {subjects.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={this.handleChangeOtherSubjects}>\r\n                  {this.props.subjects.filter((subject) => subject.type === 'other').map((subject , index) =>   <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city} placeholder={<IntlMessages id=\"columns.city\"/>}  onChange={(value) => this.setState({city: value})} className=\"gx-mb-3\"   >\r\n                  {this.props.cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup onChange={(e)=> this.setState({gender: e.target.value})} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.certificateFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.personalcardFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={this.imageFile}\r\n              >\r\n              <Upload fileList={fileList} onPreview={this.handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification} placeholder={placeholder} onChange={(event) => this.setState({qualification: event.target.value})} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cities: state.cities,\r\n    levels: state.levels,\r\n    subjects: state.subjects,\r\n    nationalities: state.nationalities,\r\n  };\r\n}\r\nexport default connect(mapStateToProps , {fetchManyLevel})(AddTeacher)\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Upload , Select , Form , Radio , Button } from \"antd\";\r\nimport { SaveFilled , UploadOutlined } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchManyLevel } from \"../../../appRedux/actions/Levels\";\r\n\r\n\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nconst EditTeacher = ({ onSaveTeacher, onToggleModal, open, teacher }) => {\r\n\r\n    const nationalities = useSelector(state => state.nationalities)\r\n    const cities = useSelector(state => state.cities)\r\n    const levelsState = useSelector(state => state.levels)\r\n    const dispatch = useDispatch()\r\n\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [bankname, setBankName] = useState('')\r\n    const [bankiban, setBankIban] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [subjectsData, setSubjects] = useState([])\r\n    const [subjectsState, setSubjectState] = useState([])\r\n    const [other_subjects, setOther] = useState([])\r\n    const [levels, setLevels] = useState([])\r\n    const [city, setCity] = useState('')\r\n    const [qualification, setQualification] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [image , setImage] = useState(null)\r\n    const [loading , setLoading] = useState(false)\r\n    const [disabled , setDisabled] = useState(false)\r\n    const [certificate , setCertificate] = useState(null)\r\n    const [personalcard , setPersonalCard] = useState(null)\r\n\r\n    const [fileList, setFileList] = useState([])\r\n\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        console.log(teacher)\r\n        setName(teacher.name)\r\n        setMobile(teacher.mobile)\r\n        setBankName(teacher.bankname)\r\n        setBankIban(teacher.bankiban)\r\n        setNationality(teacher.nationality.id)\r\n        setCity(teacher.city.id)\r\n        setQualification(teacher.qualification)\r\n        setGender(teacher.gender)\r\n        let subjects = teacher.subjects.map((sub)=> sub.id)\r\n        let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n        let levels = teacher.levels.map((lev)=> lev.id)\r\n        setSubjects(subjects)\r\n        setOther(other_subjects)\r\n        setLevels(levels)\r\n        dispatch(fetchManyLevel({ids:levels})).then((levels)=>{\r\n          let subjects = []\r\n          subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n          setSubjectState(subjects)\r\n          subjects = subjects.map((sub)=> sub.id)\r\n        })\r\n      }\r\n    }, [teacher, dispatch])\r\n\r\n    const handleChangeLevels = async (ids) => {\r\n      setLevels(ids)\r\n      setLoading(true)\r\n      const levels = await dispatch(fetchManyLevel({ids}))\r\n      let subjects = []\r\n      subjects = subjects.concat(...levels.map((level)=> level.subjects))\r\n      if(subjects.length === 0){\r\n        setLoading(false)\r\n        setSubjects([])\r\n      }else{\r\n        const distinctedSubjects = [];\r\n        const map = new Map();\r\n        for (const item of subjects) {\r\n            if(!map.has(item.id)){\r\n                map.set(item.id, true);    // set any value to Map\r\n                distinctedSubjects.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    type: item.type\r\n                });\r\n            }\r\n        }\r\n        setSubjectState(distinctedSubjects)\r\n        let filteredSujects = subjects.filter((subj) => subjectsData.includes(subj.id))\r\n        let originalSubjects = filteredSujects.map((sub) => sub.id)\r\n        setSubjects(Array.from(new Set(originalSubjects)))\r\n        setLoading(false)\r\n        setDisabled(false)\r\n      }\r\n    }\r\n  \r\n    const  handleChangeSubjects = (subjects) => {\r\n     setSubjects(subjects)\r\n    }\r\n\r\n    const  handleChangeOtherSubjects = (subjects) => {\r\n      setOther(subjects)\r\n     }\r\n\r\n    const imageFile = e => {\r\n      console.log('Upload event:', e.file);\r\n     setImage(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const certificateFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setCertificate(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const personalcardFile = e => {\r\n      console.log('Upload event:', e.file);\r\n      setPersonalCard(e.file)\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      }\r\n    \r\n      return e && e.fileList;\r\n    };\r\n  \r\n    const handleCancel = () => setPreviewVisible(false);\r\n  \r\n    const handlePreview = async file => {\r\n      if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n      }\r\n      setPreviewVisible(true)\r\n      setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n      setPreviewImage(file.url || file.preview)\r\n    };\r\n\r\n    const props = {\r\n      beforeUpload: () => {\r\n        return false;\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.saveTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === ''| mobile === '' | bankiban === ''  | bankname === '' | gender === '' | nationality === '' | city === '' | qualification === '')\r\n            return;\r\n          onToggleModal(\"editTeacherState\");\r\n          onSaveTeacher({ id:teacher.id , name , mobile , password , bankiban , bankname , gender , image , certificate , personalcard , nationality , city , subjects:subjectsData , other_subjects, levels , qualification });\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          console.log(\"ok canceled\")\r\n          onToggleModal('editTeacherState')\r\n          setName(teacher.name)\r\n          setMobile(teacher.mobile)\r\n          setBankName(teacher.bankname)\r\n          setBankIban(teacher.bankiban)\r\n          setPassword('')\r\n          setNationality(teacher.nationality.id)\r\n          setCity(teacher.city.id)\r\n          setQualification(teacher.qualification)\r\n          setGender(teacher.gender)\r\n          let subjects = teacher.subjects.map((sub)=> sub.id)\r\n          let levels = teacher.levels.map((lev)=> lev.id)\r\n          let other_subjects = teacher.other_subjects.map((sub)=> sub.id)\r\n          setOther(other_subjects)\r\n          setSubjects(subjects)\r\n          setSubjectState(teacher.subjects)\r\n          setLevels(levels)\r\n          setFileList([])\r\n        }}>\r\n   \r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form dir=\"rtl\" labelCol={{ span: 6 }} wrapperCol={{ span: 14 }} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={mobile}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setMobile(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankname\" defaultMessage=\"bankname\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankname}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankName(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.bankiban\" defaultMessage=\"bankiban\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={bankiban}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setBankIban(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={password}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.levels\"/>}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  value={levels}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.levels\"/>}\r\n                  onChange={handleChangeLevels}>\r\n                    {levelsState.map((level , index)=>  <Option key={index} value={level.id}>{level.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            \r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.materials\"/>}>\r\n                 <Select\r\n                  loading={loading}\r\n                  disabled={disabled}\r\n                  mode=\"multiple\"\r\n                  value={subjectsData}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.materials\"/>}\r\n                  onChange={handleChangeSubjects}>\r\n                  {subjectsState.filter((subject) => subject.type === 'main').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.other\"/>}>\r\n                 <Select\r\n                  mode=\"multiple\"\r\n                  value={other_subjects}\r\n                  style={{width: '100%'}}\r\n                  placeholder={<IntlMessages id=\"columns.other\"/>}\r\n                  onChange={handleChangeOtherSubjects}>\r\n                  {subjectsState.filter((subject) => subject.type === 'other').map((subject , index)=>  <Option key={index} value={subject.id}>{subject.name}</Option>)}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.nationality\"/>}>\r\n              <Select placeholder={<IntlMessages id=\"columns.nationality\"/>} value={nationality}  onChange={(value) => setNationality(value)} className=\"gx-mb-3\"   >\r\n                {nationalities.map((nationality , index)=>  <Option key={index} value={nationality.id}>{nationality.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n            <Form.Item label={<IntlMessages id=\"columns.city\"/>}>\r\n              <Select value={city}   onChange={(value) => setCity(value)} className=\"gx-mb-3\"   >\r\n                  {cities.map((city , index)=>  <Option  key={index} value={city.id}>{city.name}</Option>)}\r\n              </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender}   onChange={(event) => setGender(event.target.value)} options={[\r\n                      {label: 'ذكر', value: 'male'},\r\n                      {label: 'أنثى', value: 'female'},\r\n                    ]} />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.qualification\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item  rules={[{ required: true }]}  label={placeholder}>\r\n                      <TextArea value={qualification}  onChange={(event) => setQualification(event.target.value)} dir=\"rtl\" rows={8} />\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n              </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"certificate\"\r\n              label=\" صورة الشهادة \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={certificateFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"personalCard\"\r\n              label=\" صورة البطاقة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={personalcardFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props} listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />} >\r\n                 إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           <div className=\"gx-form-group\">\r\n             <Form.Item\r\n              name=\"image\"\r\n              label=\" الصورة الشخصية \"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={imageFile}\r\n              >\r\n              <Upload  fileList={fileList} onPreview={handlePreview} {...props}  listType=\"picture-card\">\r\n                <Button icon={<UploadOutlined />}>\r\n                  إضغط لتحميل الصورة\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n           </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditTeacher);\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Modal , Card , Tag , Col , Row } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst ShowTeacher = ({ onToggleModal, open, teacher }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [mobile, setMobile] = useState('')\r\n  const [bankname, setBankName] = useState('')\r\n  const [bankiban, setBankIban] = useState('')\r\n  const [nationality, setNationality] = useState('')\r\n  const [subjectsState, setSubjects] = useState([])\r\n  const [levelsState, setLevels] = useState([])\r\n  const [city, setCity] = useState('')\r\n  const [qualification, setQualification] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [image , setImage] = useState(null)\r\n  const [certificate , setCertificate] = useState(null)\r\n  const [personalCard , setPersonalCard] = useState(null)\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(teacher).length !== 0){\r\n        setName(teacher.name)\r\n        setMobile(teacher.mobile)\r\n        setBankName(teacher.bankname)\r\n        setBankIban(teacher.bankiban)\r\n        setNationality(teacher.nationality.name)\r\n        setCity(teacher.city.name)\r\n        setQualification(teacher.qualification)\r\n        setGender(teacher.gender)\r\n        setImage(teacher.image)\r\n        setCertificate(teacher.certificate)\r\n        setPersonalCard(teacher.personalcard)\r\n        let subjects = teacher.subjects.map((sub)=> sub.name)\r\n        let levels = teacher.levels.map((lev)=> lev.name)\r\n        setSubjects(subjects)\r\n        setLevels(levels)\r\n      }\r\n    }, [teacher])\r\n\r\n    return (\r\n      <Modal\r\n        width={'70%'}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"teacher.showTeacher\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        footer={null}\r\n        onCancel={()=> {\r\n          onToggleModal('showTeacherState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Card dir=\"rtl\" title={name}>\r\n             <Row>\r\n             <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.mobile\"/>}>\r\n                {mobile}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankname\"/>}>\r\n              {bankname}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.bankiban\"/>}>\r\n              {bankiban}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.nationality\"/>}>\r\n              {nationality}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title={<IntlMessages id=\"columns.city\"/>}>\r\n              {city}\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.gender\"/>}>\r\n              {gender === 'male' ? \"ذكر\": \"أنثى\"}\r\n              </Card>\r\n              </Col>\r\n              \r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\" title={<IntlMessages id=\"columns.qualification\"/>}>\r\n              {qualification}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.levels\"/>}>\r\n              {levelsState.map((lev,index)=>  <Tag key={index} color=\"blue\">{lev}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"title={<IntlMessages id=\"columns.materials\"/>}>\r\n              {subjectsState.map((sub , index)=>  <Tag key={index}  color=\"blue\">{sub}</Tag>)}\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title=\"الصورة الشخصية\" >\r\n                  <Card  \r\n                    cover={<img alt=\"example\" src={`/teachers/${image}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                  </Card>\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title=\"صورة البطاقة الشخصية\" >\r\n                  <Card  \r\n                    cover={<img alt=\"example\" src={`/teachers/${personalCard}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                  </Card>\r\n              </Card>\r\n              </Col>\r\n\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n              <Card style={{ marginTop: 16 }} type=\"inner\"  title=\"صورة الشهادة\" >\r\n                  <Card  \r\n                    cover={<img alt=\"example\" src={`/teachers/${certificate}`} />} style={{ marginTop: 16 }} type=\"inner\" >\r\n                  </Card>\r\n              </Card>\r\n              </Col>\r\n              </Row>\r\n          </Card>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(ShowTeacher);\r\n","import React from \"react\";\r\nimport { Button, Card, Table , Col , Row, Divider , message , Popconfirm , Switch , Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined , PlusCircleFilled, DeleteOutlined , EditOutlined, EyeFilled , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , UpdateTeacherStatus } from \"../../../appRedux/actions/Teachers\";\r\nimport { fetchSubjects } from \"../../../appRedux/actions/Subjects\";\r\nimport { fetchLevels } from \"../../../appRedux/actions/Levels\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\nimport { fetchNationalities } from \"../../../appRedux/actions/Nationalities\";\r\nimport AddTeacher from \"components/teacher/AddTeacher\";\r\nimport EditTeacher from \"components/teacher/EditTeacher\";\r\nimport ShowTeacher from \"components/teacher/ShowTeacher\";\r\n\r\nclass Teachers extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    loadingTable:false,\r\n    teacher:{},\r\n    addTeacherState:false,\r\n    editTeacherState:false,\r\n    showTeacherState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`ابحث`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingTable:true })\r\n    await this.props.fetchTeachers()\r\n    await this.props.fetchCities()\r\n    await this.props.fetchLevels()\r\n    await this.props.fetchSubjects()\r\n    await this.props.fetchNationalities()\r\n    this.setState({ loadingTable:false })\r\n  }\r\n\r\n  onEditTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"editTeacherState\");\r\n    })\r\n  };\r\n\r\n  onShowTeacher = (teacher) => {\r\n    this.setState({teacher}, ()=>{\r\n      this.onToggleModal(\"showTeacherState\");\r\n    })\r\n  };\r\n\r\n  onAddTeacher = async (data) => {\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.CreateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n\r\n  onSaveTeacher = async (data) => {\r\n    console.log(data)\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(data)) {\r\n      if(Array.isArray(data[key])){\r\n        let arr = data[key]\r\n        for (var i = 0; i < arr.length; i++) {\r\n          formData.append(`${key}[]`, arr[i]);\r\n        }\r\n      }else{\r\n        formData.append(key,data[key])\r\n      }\r\n    }\r\n    this.setState({  loadingTable:true });\r\n    await this.props.UpdateTeacher({data:formData})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchTeachers()\r\n    this.setState({  loadingTable:false });\r\n  };\r\n \r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true , loadingTable:true });\r\n    this.props.DeleteTeachers({ids})\r\n    .then( async ()=>{\r\n      await this.props.fetchTeachers()\r\n      message.success('تم حذف المدرس');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({  loadingTable:false , loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const { loading, selectedRowKeys , visible , teacher , loadingTable } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    }, {\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title:  <IntlMessages id=\"columns.nationality\"/>,\r\n      dataIndex: 'nationality',\r\n      key: 'nationality' , render: (nationality) => nationality.name, \r\n      align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.city\"/>,\r\n      dataIndex: 'city',\r\n      key: 'city' , render: (city) => city.name, \r\n      align:'right',\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , id}) => (\r\n         <Switch checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"  defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateTeacherStatus({data:{status , id}})\r\n          .then(async()=> {\r\n            this.props.fetchTeachers().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (teacher) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditTeacher(teacher)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n          <Divider type=\"vertical\"/>\r\n          <Button onClick={() => this.onShowTeacher(teacher)}  dir=\"rtl\" type=\"primary\" icon={<EyeFilled />} > تفاصيل </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Teachers\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addTeacherState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\"/>\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">  \r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddTeacher open={this.state.addTeacherState} onAddTeacher={this.onAddTeacher} onToggleModal={this.onToggleModal} />\r\n          <EditTeacher open={this.state.editTeacherState} teacher={teacher} onSaveTeacher={this.onSaveTeacher} onToggleModal={this.onToggleModal} />\r\n          <ShowTeacher open={this.state.showTeacherState} teacher={teacher} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id}  bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.teachers}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    teachers: state.teachers,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { UpdateTeacherStatus, fetchTeachers , CreateTeacher , UpdateTeacher, DeleteTeachers , fetchCities , fetchLevels , fetchSubjects , fetchNationalities })(Teachers)\r\n","import React from \"react\";\r\nimport { Input, Modal  , Radio , Form , message  } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\nclass AddStudent extends React.Component {\r\n\r\n  state = {\r\n    name :'',\r\n    mobile :'',\r\n    gender :'',\r\n    password :'',\r\n  }\r\n\r\n  render() {\r\n    const { onAddStudent, onToggleModal, open } = this.props;\r\n    const { name , mobile , gender , password   } = this.state;\r\n   \r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.addStudent\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || mobile === '' || gender === '' || password === ''){\r\n            message.error('المرجو إدخال المعلومات المطلوبة')\r\n          }else{\r\n            onToggleModal(\"addStudentState\");\r\n            onAddStudent({ name , mobile , gender , password });\r\n            this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n          }\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addStudentState\")\r\n          this.setState({ name: '' , mobile : '' ,  gender : '' , password : ''})\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => this.setState({name: event.target.value})}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup  onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   this.setState({gender: e.target.value})\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AddStudent\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Radio , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst options = [\r\n  {label: 'ذكر', value: 'male'},\r\n  {label: 'أنثى', value: 'female'},\r\n];\r\n\r\n\r\nconst EditStudent = ({ onSaveStudent, onToggleModal, open, student }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n      if(Object.keys(student).length !== 0){\r\n        setName(student.name)\r\n        setMobile(student.mobile)\r\n        setGender(student.gender)\r\n      }\r\n    }, [student])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"student.saveStudent\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if ( name === '' || mobile === '' || gender === '')\r\n            return;\r\n          onToggleModal(\"editStudentState\");\r\n          onSaveStudent({ id:student.id , name  ,  mobile , gender  , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setGender(gender)\r\n          setPassword('')\r\n        }}\r\n        onCancel={()=> {\r\n          setName(student.name)\r\n          setMobile(student.mobile)\r\n          setGender(student.gender)\r\n          setPassword('')\r\n          onToggleModal('editStudentState')\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}} >\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                    <Input\r\n                    required\r\n                    value={name}\r\n                    placeholder={placeholder}\r\n                    onChange={(event) => setName( event.target.value)}\r\n                    margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='password'\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword( event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Form.Item label={<IntlMessages id=\"columns.gender\"/>}>\r\n                 <RadioGroup value={gender} onChange={(e)=> {\r\n                   console.log(e.target.value)\r\n                   setGender(e.target.value)\r\n                 }} options={options} />\r\n              </Form.Item>\r\n            </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditStudent);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , Divider , message , Popconfirm , Switch ,  Input , Space } from \"antd\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport {SearchOutlined, PlusCircleFilled, DeleteOutlined , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone } from \"@ant-design/icons\";\r\nimport AddStudent from \"components/student/AddStudent\";\r\nimport EditStudent from \"components/student/EditStudent\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudents , CreateStudent , UpdateStudent, DeleteStudents } from \"../../../appRedux/actions/Students\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { fetchCities } from \"../../../appRedux/actions/Cities\";\r\n\r\n\r\nclass Students extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    student:{},\r\n    loadingTable:false,\r\n    addStudentState:false,\r\n    editStudentState:false,\r\n    visible: false,\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n \r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStudents()\r\n    this.props.fetchCities()\r\n    this.setState({ loading:false })\r\n  }\r\n\r\n  onEditStudent = (data) => {\r\n    this.setState({student:data}, ()=>{\r\n      this.onToggleModal(\"editStudentState\");\r\n    })\r\n  };\r\n\r\n  onAddStudent = async (data) => {\r\n    await this.props.CreateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n  };\r\n\r\n  onSaveStudent = async (data) => {\r\n    this.setState({loadingTable:true}); \r\n    await this.props.UpdateStudent({data})\r\n    message.success('تمت العملية بنجاح')\r\n    await this.props.fetchStudents()\r\n    this.setState({loadingTable:false}); \r\n\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirm = (ids) => {\r\n    this.setState({ loading: true });\r\n    this.props.DeleteStudents({ids})\r\n    .then( async ()=>{\r\n      await this.props.fetchStudents()\r\n      message.success('تم حذف الطالب');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    }).catch(()=>{\r\n      message.error('عطل أثناء العملية');\r\n      this.setState({ loading: false , selectedRowKeys:[]});\r\n    });   \r\n  }\r\n\r\n  handleVisibleChange = (visible) => {\r\n    const { selectedRowKeys  } = this.state;\r\n  \r\n    if (selectedRowKeys.length > 0) {\r\n      this.setState({visible}); \r\n    }\r\n  };\r\n  cancel = (e) => {\r\n    this.setState({ selectedRowKeys:[]  });\r\n  } \r\n\r\n  render() {\r\n    const {loading, selectedRowKeys , student , visible , loadingTable} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right',\r\n      ...this.getColumnSearchProps('mobile'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.gender\"/>,  dataIndex: '', key: 'x', render: ({gender}) => (\r\n        <span>\r\n          {gender ? gender === 'male' ? 'ذكر' : 'أنثى' : 'غير وارد'}\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },\r\n    {\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateStudent({data:{status , name , password:'' , mobile , id}})\r\n          .then(async()=> {\r\n            this.props.fetchStudents().then(()=>{\r\n              message.success('تمت العملية بنجاح')\r\n              this.setState({loadingTable:false}); \r\n            })\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditStudent(data)} dir=\"rtl\" type=\"primary\" icon={<EditOutlined />} >تعديل</Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Students\"/></h1>}>\r\n            <Button  onClick={() => this.onToggleModal('addStudentState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n            <Divider type=\"vertical\" />\r\n            <Popconfirm visible={visible} onVisibleChange={this.handleVisibleChange}  placement=\"topLeft\"  title=\"هل أنت متأكد ؟\" onConfirm={ () => this.confirm(selectedRowKeys) } onCancel={this.cancel} okText=\"نعم\" cancelText=\"لا\">\r\n              <Button  size=\"large\" icon={<DeleteOutlined/>} disabled={!hasSelected} type=\"danger\" loading={loading} />\r\n            </Popconfirm>\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddStudent open={this.state.addStudentState} onAddStudent={this.onAddStudent} onToggleModal={this.onToggleModal} />\r\n          <EditStudent open={this.state.editStudentState} student={student} onSaveStudent={this.onSaveStudent} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} loading={loadingTable} rowKey={record => record.id} bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.students}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    students: state.students,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { fetchStudents ,  CreateStudent , UpdateStudent, DeleteStudents , fetchCities })(Students)\r\n","import React from \"react\";\r\nimport { Input, Modal , Select , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nclass AddUser extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name :'',\r\n      username:'',\r\n      mobile :'',\r\n      role :'',\r\n      password :'',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { onAddUser, onToggleModal, open } = this.props;\r\n    const { name , mobile , role , password , username } = this.state;\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.addUser\"/>}\r\n        toggle={onToggleModal} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || username === '' || mobile === '' || role === '' || password === '')\r\n            return;\r\n          onAddUser({ name , username , mobile , role , password });\r\n          this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal(\"addUserState\")\r\n          this.setState({ name: '' , username: '' , mobile : '' ,  role : '' , password : '' })\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({name: event.target.value})}\r\n                  margin=\"none\"/>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({username: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({mobile: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  type='password'\r\n                  required\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => this.setState({password: event.target.value})}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => this.setState({role: value})} placeholder={placeholder} className=\"gx-mb-3\"  style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                   </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React , { useState , useEffect } from \"react\";\r\nimport { Input, Modal , Select , Form } from \"antd\";\r\nimport { SaveFilled } from \"@ant-design/icons\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Option = Select.Option;\r\n\r\nconst EditUser = ({ onSaveUser, onToggleModal, open, user }) => {\r\n  \r\n    const [name, setName] = useState('')\r\n    const [username, setUserName] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    useEffect(() => {\r\n      if(Object.keys(user).length !== 0){\r\n        setName(user.name)\r\n        setMobile(user.mobile)\r\n        setRole(user.role)\r\n        setUserName(user.username)\r\n      }\r\n    }, [user])\r\n\r\n    return (\r\n      <Modal\r\n        okText={<SaveFilled />}\r\n        cancelText={ <IntlMessages id=\"modal.cancelSave\"/> }\r\n        title={<IntlMessages id=\"user.saveUser\"/>}\r\n        toggle={onToggleModal} \r\n        visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '' || username === '' || mobile === '' || role === '')\r\n            return;\r\n          onToggleModal(\"editUserState\");\r\n          onSaveUser({ id:user.id , name , mobile , username , role , password });\r\n          setName(name)\r\n          setMobile(mobile)\r\n          setRole(role)\r\n          setUserName(username)\r\n\r\n        }}\r\n        onCancel={()=> {\r\n          onToggleModal('editUserState')\r\n          setName(user.name)\r\n          setMobile(user.mobile)\r\n          setRole(user.role)\r\n          setUserName(user.username)\r\n        }}>\r\n\r\n        <div  className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <Form labelCol={{span:6}} wrapperCol={{span:14}}>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type='text'\r\n                  value={name}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.username\" defaultMessage=\"username\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={username}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setUserName(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.mobile\" defaultMessage=\"mobile\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{  pattern:/^[+]\\d{3}\\d{9}$/ , required: true , message: 'المرجو إدخال رقم هاتف صحيح' }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  value={mobile}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setMobile(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.password\" defaultMessage=\"password\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Input\r\n                  required\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder={placeholder}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  margin=\"none\"/>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <FormattedMessage id=\"columns.role\" defaultMessage=\"role\">\r\n              {\r\n                placeholder => (\r\n                  <Form.Item rules={[{ required: true }]}   label={placeholder}>\r\n                  <Select onChange={(value) => setRole(value)} placeholder={placeholder} className=\"gx-mb-3\" value={role} style={{width: '100%'}} >\r\n                    <Option value=\"admin\"><IntlMessages id=\"option.admin\"/></Option>\r\n                    <Option value=\"superuser\"><IntlMessages id=\"option.superuser\"/></Option>\r\n                  </Select>\r\n                  </Form.Item>\r\n                  )\r\n                }\r\n            </FormattedMessage>\r\n            </div>\r\n           </Form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default React.memo(EditUser);\r\n","import React from \"react\";\r\nimport {Button, Card, Table , Row , Col , message , Input , Space , Switch } from \"antd\";\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined , PlusCircleFilled , EditOutlined , CheckCircleTwoTone , ExclamationCircleTwoTone} from \"@ant-design/icons\";\r\nimport { fetchUsers , CreateUser , UpdateUser, DeleteUsers } from \"../../../appRedux/actions/Users\";\r\nimport { connect } from \"react-redux\";\r\nimport AddUser from \"components/users/AddUser\";\r\nimport EditUser from \"components/users/EditUser\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\n\r\nclass Members extends React.Component {\r\n\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n    addUserState:false,\r\n    editUserState:false,\r\n    user:{} ,\r\n    searchText: '',\r\n    searchedColumn: '',\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex , handleSearch , handleReset) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <FormattedMessage id=\"columns.name\" defaultMessage=\"name\">\r\n          {\r\n            placeholder => (\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`ابحث`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          )\r\n          }\r\n       </FormattedMessage>\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            ابحث\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            إلغاء\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      this.props.fetchUsers()\r\n    }\r\n  }\r\n\r\n  onToggleModal = (modal) => {\r\n    this.setState(state => ({\r\n      [modal]:!state[modal],\r\n    }));\r\n  }\r\n\r\n  onEditUser = (user) => {\r\n    this.setState({user}, ()=>{\r\n      this.onToggleModal(\"editUserState\");\r\n    })\r\n  };\r\n\r\n  onAddUser = async (data) => {\r\n    await this.props.CreateUser({data}).then(async()=>{\r\n      message.success('تمت العملية بنجاح')\r\n      const { token } = this.props.auth \r\n      let decoded = null\r\n      if(token !== null){\r\n        decoded = jwtDecode(token)\r\n      }\r\n      if(decoded){\r\n        await  this.props.fetchUsers({\r\n          filter : {id : decoded.userId}\r\n        })\r\n      }else{\r\n        await this.props.fetchUsers()\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    }).catch((err)=> {\r\n      if(err.data.error === 'duplicate username'){\r\n        message.error('اسم المستخدم الذي تم إدخاله مكرر')\r\n      }else if(err.data.error === 'duplicate phonenumber'){\r\n        message.error('الهاتف الذي تم استخدامه مكرر')\r\n      }else{\r\n        message.error('عطل أثناء الإضافة!')\r\n      }\r\n      this.onToggleModal(\"addUserState\");\r\n    })\r\n  };\r\n\r\n  onSaveUser = async (data) => {\r\n    await this.props.UpdateUser({data})\r\n    message.success('تمت العملية بنجاح')\r\n    const { token } = this.props.auth \r\n    let decoded = null\r\n    if(token !== null){\r\n      decoded = jwtDecode(token)\r\n    }\r\n    if(decoded){\r\n      await  this.props.fetchUsers({\r\n        filter : {id : decoded.userId}\r\n      })\r\n    }else{\r\n      await this.props.fetchUsers()\r\n    }\r\n  };\r\n\r\n \r\n \r\n  \r\n\r\n  render() {\r\n    const { selectedRowKeys  , user} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [{\r\n      title: <IntlMessages id=\"columns.name\"/>,\r\n      dataIndex: 'name',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('name'),\r\n    },{\r\n      title: <IntlMessages id=\"columns.username\"/>,\r\n      dataIndex: 'username',\r\n      align:'right'\r\n    } ,{\r\n      title: <IntlMessages id=\"columns.mobile\"/>,\r\n      dataIndex: 'mobile',\r\n      align:'right' ,\r\n      ...this.getColumnSearchProps('mobile')\r\n    },{\r\n      title: <IntlMessages id=\"columns.role\"/>,  dataIndex: '', key: 'x', render: ({role}) => (\r\n        <span>\r\n          {role === 'admin' ? 'أدمن' :  role === 'superuser' ? 'سوبر أدمن' : 'غير وارد' }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: <IntlMessages id=\"columns.status\"/>,  dataIndex: '', key: 'x', render: ({status}) => (\r\n        <span>\r\n          {status === 'active' ? <CheckCircleTwoTone title={status} twoToneColor=\"#40a9ff\"  /> :  <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" /> }\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    },{\r\n      title: 'تعديل الحالة', dataIndex: '', key: '', render: ({status , username , name , mobile , password , id}) => (\r\n         <Switch  checkedChildren=\"مفعل\" unCheckedChildren=\"غير مفعل\"   defaultChecked={status === \"active\" ? true : false}  onChange={(checked) => {\r\n          let status = checked ? \"active\" : \"inactive\"\r\n          this.setState({loadingTable:true}); \r\n          this.props.UpdateUser({data:{status , name , password:'' , username , mobile , id}})\r\n          .then(async()=> {\r\n            const { token } = this.props.auth \r\n            let decoded = null\r\n            console.log(token)\r\n            if(token !== null){\r\n              decoded = jwtDecode(token)\r\n            }\r\n            if(decoded){\r\n              await  this.props.fetchUsers({\r\n                filter : {id : decoded.userId}\r\n              })\r\n            }else{\r\n              await this.props.fetchUsers()\r\n            }\r\n            message.success('تمت العملية بنجاح')\r\n            this.setState({loadingTable:false});\r\n          })\r\n          .catch((err)=> {\r\n            message.error('عطل أثناء التعديل')\r\n            this.setState({loadingTable:false}); \r\n          }, 2000);\r\n         } } />\r\n      ) , align :'right' , width :\"500\"\r\n    },{\r\n      title: <IntlMessages id=\"columns.operation\"/>, dataIndex: '', key: 'x', render: (data) => (\r\n        <span>\r\n          <Button onClick={() => this.onEditUser(data)}  type=\"primary\" icon={<EditOutlined />}> تعديل </Button>\r\n        </span>\r\n      ),\r\n     align:'right'\r\n    }];\r\n\r\n    return (\r\n      <Row>\r\n       <Col span={24}>\r\n        <Card title={<h1><IntlMessages id=\"sidebar.Users\"/></h1>}>\r\n          <Button onClick={() => this.onToggleModal('addUserState')} size=\"large\" icon={<PlusCircleFilled />}  type=\"primary\" />\r\n          <div className=\"gx-mb-3\">\r\n            <span style={{marginLeft: 8}}>\r\n              {hasSelected ? `تم تحديد ${selectedRowKeys.length} عناصر` : ''}\r\n            </span>\r\n          </div>\r\n          <AddUser open={this.state.addUserState} onAddUser={this.onAddUser} onToggleModal={this.onToggleModal} />\r\n          <EditUser open={this.state.editUserState} user={user} onSaveUser={this.onSaveUser} onToggleModal={this.onToggleModal} />\r\n          <Table locale={{emptyText:'لا توجد أي بيانات'}} rowKey={record => record.id} direction=\"rtl\" bordered={true} className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={this.props.users}/>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.users,\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps,{fetchUsers , CreateUser , UpdateUser, DeleteUsers })(Members)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Teachers from \"./Teachers\";\r\nimport Students from \"./Students\";\r\nimport Members from \"./Members\";\r\n\r\n\r\nconst Users = ({match}) => (\r\n  <Switch>\r\n    <Route path={`${match.url}/teachers`} component={Teachers}/>\r\n    <Route path={`${match.url}/students`} component={Students}/>\r\n    <Route path={`${match.url}/members`} component={Members}/>\r\n  </Switch>\r\n);\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}